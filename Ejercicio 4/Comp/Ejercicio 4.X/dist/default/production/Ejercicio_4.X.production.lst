

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Feb 01 09:32:58 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    10                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    12   000000                     
    13                           ; Generated 23/03/2023 GMT
    14                           ; 
    15                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC18F4550 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47   000000                     _PORTDbits	set	3971
    48   000000                     _TRISB	set	3987
    49   000000                     _ADCON1	set	4033
    50   000000                     _TRISD	set	3989
    51   000000                     _LATBbits	set	3978
    52                           
    53                           ; #config settings
    54                           
    55                           	psect	cinit
    56   000916                     __pcinit:
    57                           	callstack 0
    58   000916                     start_initialization:
    59                           	callstack 0
    60   000916                     __initialization:
    61                           	callstack 0
    62   000916                     end_of_initialization:
    63                           	callstack 0
    64   000916                     __end_of__initialization:
    65                           	callstack 0
    66   000916  0100               	movlb	0
    67   000918  EF01  F004         	goto	_main	;jump to C main() function
    68                           
    69                           	psect	cstackCOMRAM
    70   000000                     __pcstackCOMRAM:
    71                           	callstack 0
    72   000000                     
    73                           ; 1 bytes @ 0x0
    74 ;;
    75 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    76 ;;
    77 ;; *************** function _main *****************
    78 ;; Defined at:
    79 ;;		line 14 in file "main.c"
    80 ;; Parameters:    Size  Location     Type
    81 ;;		None
    82 ;; Auto vars:     Size  Location     Type
    83 ;;		None
    84 ;; Return value:  Size  Location     Type
    85 ;;                  1    wreg      void 
    86 ;; Registers used:
    87 ;;		wreg, status,2
    88 ;; Tracked objects:
    89 ;;		On entry : 0/0
    90 ;;		On exit  : 0/0
    91 ;;		Unchanged: 0/0
    92 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
    93 ;;      Params:         0       0       0       0       0       0       0       0       0
    94 ;;      Locals:         0       0       0       0       0       0       0       0       0
    95 ;;      Temps:          0       0       0       0       0       0       0       0       0
    96 ;;      Totals:         0       0       0       0       0       0       0       0       0
    97 ;;Total ram usage:        0 bytes
    98 ;; This function calls:
    99 ;;		Nothing
   100 ;; This function is called by:
   101 ;;		Startup code after reset
   102 ;; This function uses a non-reentrant model
   103 ;;
   104                           
   105                           	psect	text0
   106   000802                     __ptext0:
   107                           	callstack 0
   108   000802                     _main:
   109                           	callstack 31
   110   000802                     
   111                           ;main.c: 15:     ADCON1 = 0X0F;
   112   000802  0E0F               	movlw	15
   113   000804  6EC1               	movwf	193,c	;volatile
   114                           
   115                           ;main.c: 16:     TRISB = 0;
   116   000806  0E00               	movlw	0
   117   000808  6E93               	movwf	147,c	;volatile
   118                           
   119                           ;main.c: 17:     TRISD = 1;
   120   00080A  0E01               	movlw	1
   121   00080C  6E95               	movwf	149,c	;volatile
   122   00080E                     l712:
   123                           
   124                           ;main.c: 20:         if (PORTDbits.RD0==1){
   125   00080E  A083               	btfss	131,0,c	;volatile
   126   000810  EF0C  F004         	goto	u11
   127   000814  EF0E  F004         	goto	u10
   128   000818                     u11:
   129   000818  EF0F  F004         	goto	l16
   130   00081C                     u10:
   131   00081C                     
   132                           ;main.c: 21:             LATBbits.LATB0=1;
   133   00081C  808A               	bsf	138,0,c	;volatile
   134   00081E                     l16:
   135                           
   136                           ;main.c: 23:         if (PORTDbits.RD1==1){
   137   00081E  A283               	btfss	131,1,c	;volatile
   138   000820  EF14  F004         	goto	u21
   139   000824  EF16  F004         	goto	u20
   140   000828                     u21:
   141   000828  EF17  F004         	goto	l17
   142   00082C                     u20:
   143   00082C                     
   144                           ;main.c: 24:             LATBbits.LATB1=1;
   145   00082C  828A               	bsf	138,1,c	;volatile
   146   00082E                     l17:
   147                           
   148                           ;main.c: 26:         if (PORTDbits.RD2==1){
   149   00082E  A483               	btfss	131,2,c	;volatile
   150   000830  EF1C  F004         	goto	u31
   151   000834  EF1E  F004         	goto	u30
   152   000838                     u31:
   153   000838  EF1F  F004         	goto	l18
   154   00083C                     u30:
   155   00083C                     
   156                           ;main.c: 27:             LATBbits.LATB2=1;
   157   00083C  848A               	bsf	138,2,c	;volatile
   158   00083E                     l18:
   159                           
   160                           ;main.c: 29:         if (PORTDbits.RD3==1){
   161   00083E  A683               	btfss	131,3,c	;volatile
   162   000840  EF24  F004         	goto	u41
   163   000844  EF26  F004         	goto	u40
   164   000848                     u41:
   165   000848  EF27  F004         	goto	l19
   166   00084C                     u40:
   167   00084C                     
   168                           ;main.c: 30:             LATBbits.LATB3=1;
   169   00084C  868A               	bsf	138,3,c	;volatile
   170   00084E                     l19:
   171                           
   172                           ;main.c: 32:         if (PORTDbits.RD4==1){
   173   00084E  A883               	btfss	131,4,c	;volatile
   174   000850  EF2C  F004         	goto	u51
   175   000854  EF2E  F004         	goto	u50
   176   000858                     u51:
   177   000858  EF2F  F004         	goto	l20
   178   00085C                     u50:
   179   00085C                     
   180                           ;main.c: 33:             LATBbits.LATB4=1;
   181   00085C  888A               	bsf	138,4,c	;volatile
   182   00085E                     l20:
   183                           
   184                           ;main.c: 35:         if (PORTDbits.RD5==1){
   185   00085E  AA83               	btfss	131,5,c	;volatile
   186   000860  EF34  F004         	goto	u61
   187   000864  EF36  F004         	goto	u60
   188   000868                     u61:
   189   000868  EF37  F004         	goto	l21
   190   00086C                     u60:
   191   00086C                     
   192                           ;main.c: 36:             LATBbits.LATB5=1;
   193   00086C  8A8A               	bsf	138,5,c	;volatile
   194   00086E                     l21:
   195                           
   196                           ;main.c: 38:         if (PORTDbits.RD6==1){
   197   00086E  AC83               	btfss	131,6,c	;volatile
   198   000870  EF3C  F004         	goto	u71
   199   000874  EF3E  F004         	goto	u70
   200   000878                     u71:
   201   000878  EF3F  F004         	goto	l22
   202   00087C                     u70:
   203   00087C                     
   204                           ;main.c: 39:             LATBbits.LATB6=1;
   205   00087C  8C8A               	bsf	138,6,c	;volatile
   206   00087E                     l22:
   207                           
   208                           ;main.c: 41:         if (PORTDbits.RD7==1){
   209   00087E  AE83               	btfss	131,7,c	;volatile
   210   000880  EF44  F004         	goto	u81
   211   000884  EF46  F004         	goto	u80
   212   000888                     u81:
   213   000888  EF47  F004         	goto	l23
   214   00088C                     u80:
   215   00088C                     
   216                           ;main.c: 42:             LATBbits.LATB7=1;
   217   00088C  8E8A               	bsf	138,7,c	;volatile
   218   00088E                     l23:
   219                           
   220                           ;main.c: 44:         if (PORTDbits.RD0==0){
   221   00088E  B083               	btfsc	131,0,c	;volatile
   222   000890  EF4C  F004         	goto	u91
   223   000894  EF4E  F004         	goto	u90
   224   000898                     u91:
   225   000898  EF4F  F004         	goto	l24
   226   00089C                     u90:
   227   00089C                     
   228                           ;main.c: 45:             LATBbits.LATB0=0;
   229   00089C  908A               	bcf	138,0,c	;volatile
   230   00089E                     l24:
   231                           
   232                           ;main.c: 47:         if (PORTDbits.RD1==0){
   233   00089E  B283               	btfsc	131,1,c	;volatile
   234   0008A0  EF54  F004         	goto	u101
   235   0008A4  EF56  F004         	goto	u100
   236   0008A8                     u101:
   237   0008A8  EF57  F004         	goto	l25
   238   0008AC                     u100:
   239   0008AC                     
   240                           ;main.c: 48:             LATBbits.LATB1=0;
   241   0008AC  928A               	bcf	138,1,c	;volatile
   242   0008AE                     l25:
   243                           
   244                           ;main.c: 50:         if (PORTDbits.RD2==0){
   245   0008AE  B483               	btfsc	131,2,c	;volatile
   246   0008B0  EF5C  F004         	goto	u111
   247   0008B4  EF5E  F004         	goto	u110
   248   0008B8                     u111:
   249   0008B8  EF5F  F004         	goto	l26
   250   0008BC                     u110:
   251   0008BC                     
   252                           ;main.c: 51:             LATBbits.LATB2=0;
   253   0008BC  948A               	bcf	138,2,c	;volatile
   254   0008BE                     l26:
   255                           
   256                           ;main.c: 53:         if (PORTDbits.RD3==0){
   257   0008BE  B683               	btfsc	131,3,c	;volatile
   258   0008C0  EF64  F004         	goto	u121
   259   0008C4  EF66  F004         	goto	u120
   260   0008C8                     u121:
   261   0008C8  EF67  F004         	goto	l27
   262   0008CC                     u120:
   263   0008CC                     
   264                           ;main.c: 54:             LATBbits.LATB3=0;
   265   0008CC  968A               	bcf	138,3,c	;volatile
   266   0008CE                     l27:
   267                           
   268                           ;main.c: 56:         if (PORTDbits.RD4==0){
   269   0008CE  B883               	btfsc	131,4,c	;volatile
   270   0008D0  EF6C  F004         	goto	u131
   271   0008D4  EF6E  F004         	goto	u130
   272   0008D8                     u131:
   273   0008D8  EF6F  F004         	goto	l28
   274   0008DC                     u130:
   275   0008DC                     
   276                           ;main.c: 57:             LATBbits.LATB4=0;
   277   0008DC  988A               	bcf	138,4,c	;volatile
   278   0008DE                     l28:
   279                           
   280                           ;main.c: 59:         if (PORTDbits.RD5==0){
   281   0008DE  BA83               	btfsc	131,5,c	;volatile
   282   0008E0  EF74  F004         	goto	u141
   283   0008E4  EF76  F004         	goto	u140
   284   0008E8                     u141:
   285   0008E8  EF77  F004         	goto	l29
   286   0008EC                     u140:
   287   0008EC                     
   288                           ;main.c: 60:             LATBbits.LATB5=0;
   289   0008EC  9A8A               	bcf	138,5,c	;volatile
   290   0008EE                     l29:
   291                           
   292                           ;main.c: 62:         if (PORTDbits.RD6==0){
   293   0008EE  BC83               	btfsc	131,6,c	;volatile
   294   0008F0  EF7C  F004         	goto	u151
   295   0008F4  EF7E  F004         	goto	u150
   296   0008F8                     u151:
   297   0008F8  EF7F  F004         	goto	l30
   298   0008FC                     u150:
   299   0008FC                     
   300                           ;main.c: 63:             LATBbits.LATB6=0;
   301   0008FC  9C8A               	bcf	138,6,c	;volatile
   302   0008FE                     l30:
   303                           
   304                           ;main.c: 65:         if (PORTDbits.RD7==0){
   305   0008FE  BE83               	btfsc	131,7,c	;volatile
   306   000900  EF84  F004         	goto	u161
   307   000904  EF86  F004         	goto	u160
   308   000908                     u161:
   309   000908  EF07  F004         	goto	l712
   310   00090C                     u160:
   311   00090C                     
   312                           ;main.c: 66:             LATBbits.LATB7=0;
   313   00090C  9E8A               	bcf	138,7,c	;volatile
   314   00090E  EF07  F004         	goto	l712
   315   000912  EF00  F000         	goto	start
   316   000916                     __end_of_main:
   317                           	callstack 0
   318                           
   319                           	psect	smallconst
   320   000800                     __psmallconst:
   321                           	callstack 0
   322   000800  00                 	db	0
   323   000801  00                 	db	0	; dummy byte at the end
   324   000000                     
   325                           	psect	rparam
   326   000000                     
   327                           	psect	config
   328                           
   329                           ;Config register CONFIG1L @ 0x300000
   330                           ;	PLL Prescaler Selection bits
   331                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   332                           ;	System Clock Postscaler Selection bits
   333                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   334                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   335                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   336   300000                     	org	3145728
   337   300000  00                 	db	0
   338                           
   339                           ;Config register CONFIG1H @ 0x300001
   340                           ;	Oscillator Selection bits
   341                           ;	FOSC = HS, HS oscillator (HS)
   342                           ;	Fail-Safe Clock Monitor Enable bit
   343                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   344                           ;	Internal/External Oscillator Switchover bit
   345                           ;	IESO = OFF, Oscillator Switchover mode disabled
   346   300001                     	org	3145729
   347   300001  0C                 	db	12
   348                           
   349                           ;Config register CONFIG2L @ 0x300002
   350                           ;	Power-up Timer Enable bit
   351                           ;	PWRT = OFF, PWRT disabled
   352                           ;	Brown-out Reset Enable bits
   353                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   354                           ;	Brown-out Reset Voltage bits
   355                           ;	BORV = 3, Minimum setting 2.05V
   356                           ;	USB Voltage Regulator Enable bit
   357                           ;	VREGEN = OFF, USB voltage regulator disabled
   358   300002                     	org	3145730
   359   300002  1F                 	db	31
   360                           
   361                           ;Config register CONFIG2H @ 0x300003
   362                           ;	Watchdog Timer Enable bit
   363                           ;	WDT = ON, WDT enabled
   364                           ;	Watchdog Timer Postscale Select bits
   365                           ;	WDTPS = 32768, 1:32768
   366   300003                     	org	3145731
   367   300003  1F                 	db	31
   368                           
   369                           ; Padding undefined space
   370   300004                     	org	3145732
   371   300004  FF                 	db	255
   372                           
   373                           ;Config register CONFIG3H @ 0x300005
   374                           ;	CCP2 MUX bit
   375                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   376                           ;	PORTB A/D Enable bit
   377                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   378                           ;	Low-Power Timer 1 Oscillator Enable bit
   379                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   380                           ;	MCLR Pin Enable bit
   381                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   382   300005                     	org	3145733
   383   300005  83                 	db	131
   384                           
   385                           ;Config register CONFIG4L @ 0x300006
   386                           ;	Stack Full/Underflow Reset Enable bit
   387                           ;	STVREN = ON, Stack full/underflow will cause Reset
   388                           ;	Single-Supply ICSP Enable bit
   389                           ;	LVP = ON, Single-Supply ICSP enabled
   390                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   391                           ;	ICPRT = OFF, ICPORT disabled
   392                           ;	Extended Instruction Set Enable bit
   393                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   394                           ;	Background Debugger Enable bit
   395                           ;	DEBUG = 0x1, unprogrammed default
   396   300006                     	org	3145734
   397   300006  85                 	db	133
   398                           
   399                           ; Padding undefined space
   400   300007                     	org	3145735
   401   300007  FF                 	db	255
   402                           
   403                           ;Config register CONFIG5L @ 0x300008
   404                           ;	Code Protection bit
   405                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   406                           ;	Code Protection bit
   407                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   408                           ;	Code Protection bit
   409                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   410                           ;	Code Protection bit
   411                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   412   300008                     	org	3145736
   413   300008  0F                 	db	15
   414                           
   415                           ;Config register CONFIG5H @ 0x300009
   416                           ;	Boot Block Code Protection bit
   417                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   418                           ;	Data EEPROM Code Protection bit
   419                           ;	CPD = OFF, Data EEPROM is not code-protected
   420   300009                     	org	3145737
   421   300009  C0                 	db	192
   422                           
   423                           ;Config register CONFIG6L @ 0x30000A
   424                           ;	Write Protection bit
   425                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   426                           ;	Write Protection bit
   427                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   428                           ;	Write Protection bit
   429                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   430                           ;	Write Protection bit
   431                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   432   30000A                     	org	3145738
   433   30000A  0F                 	db	15
   434                           
   435                           ;Config register CONFIG6H @ 0x30000B
   436                           ;	Configuration Register Write Protection bit
   437                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   438                           ;	Boot Block Write Protection bit
   439                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   440                           ;	Data EEPROM Write Protection bit
   441                           ;	WRTD = OFF, Data EEPROM is not write-protected
   442   30000B                     	org	3145739
   443   30000B  E0                 	db	224
   444                           
   445                           ;Config register CONFIG7L @ 0x30000C
   446                           ;	Table Read Protection bit
   447                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   448                           ;	Table Read Protection bit
   449                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   450                           ;	Table Read Protection bit
   451                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   452                           ;	Table Read Protection bit
   453                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   454   30000C                     	org	3145740
   455   30000C  0F                 	db	15
   456                           
   457                           ;Config register CONFIG7H @ 0x30000D
   458                           ;	Boot Block Table Read Protection bit
   459                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   460   30000D                     	org	3145741
   461   30000D  40                 	db	64
   462                           tosu	equ	0xFFF
   463                           tosh	equ	0xFFE
   464                           tosl	equ	0xFFD
   465                           stkptr	equ	0xFFC
   466                           pclatu	equ	0xFFB
   467                           pclath	equ	0xFFA
   468                           pcl	equ	0xFF9
   469                           tblptru	equ	0xFF8
   470                           tblptrh	equ	0xFF7
   471                           tblptrl	equ	0xFF6
   472                           tablat	equ	0xFF5
   473                           prodh	equ	0xFF4
   474                           prodl	equ	0xFF3
   475                           indf0	equ	0xFEF
   476                           postinc0	equ	0xFEE
   477                           postdec0	equ	0xFED
   478                           preinc0	equ	0xFEC
   479                           plusw0	equ	0xFEB
   480                           fsr0h	equ	0xFEA
   481                           fsr0l	equ	0xFE9
   482                           wreg	equ	0xFE8
   483                           indf1	equ	0xFE7
   484                           postinc1	equ	0xFE6
   485                           postdec1	equ	0xFE5
   486                           preinc1	equ	0xFE4
   487                           plusw1	equ	0xFE3
   488                           fsr1h	equ	0xFE2
   489                           fsr1l	equ	0xFE1
   490                           bsr	equ	0xFE0
   491                           indf2	equ	0xFDF
   492                           postinc2	equ	0xFDE
   493                           postdec2	equ	0xFDD
   494                           preinc2	equ	0xFDC
   495                           plusw2	equ	0xFDB
   496                           fsr2h	equ	0xFDA
   497                           fsr2l	equ	0xFD9
   498                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      0       0
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      0       0       1        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
DATA                 0      0       0       4        0.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0      0       0       6        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBIGSFRh          3E      0       0      21        0.0%
BITBIGSFRlhh        2B      0       0      22        0.0%
BITBIGSFRlhl         1      0       0      23        0.0%
BITBIGSFRllhh        8      0       0      24        0.0%
BITBIGSFRllhl        6      0       0      25        0.0%
BITBIGSFRlll        23      0       0      26        0.0%
BIGRAM             7FF      0       0      27        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Feb 01 09:32:58 2024

                     l20 085E                       l21 086E                       l30 08FE  
                     l22 087E                       l23 088E                       l24 089E  
                     l16 081E                       l25 08AE                       l17 082E  
                     l26 08BE                       l18 083E                       l27 08CE  
                     l19 084E                       l28 08DE                       l29 08EE  
                     u10 081C                       u11 0818                       u20 082C  
                     u21 0828                       u30 083C                       u31 0838  
                     u40 084C                       u41 0848                       u50 085C  
                     u51 0858                       u60 086C                       u61 0868  
                     u70 087C                       u71 0878                       u80 088C  
                     u81 0888                       u90 089C                       u91 0898  
                    l710 0802                      l720 084C                      l712 080E  
                    l730 089C                      l722 085C                      l714 081C  
                    l740 08EC                      l732 08AC                      l724 086C  
                    l716 082C                      l742 08FC                      l734 08BC  
                    l726 087C                      l718 083C                      l744 090C  
                    l736 08CC                      l728 088C                      l738 08DC  
                    u100 08AC                      u101 08A8                      u110 08BC  
                    u111 08B8                      u120 08CC                      u121 08C8  
                    u130 08DC                      u131 08D8                      u140 08EC  
                    u141 08E8                      u150 08FC                      u151 08F8  
                    u160 090C                      u161 0908                     _main 0802  
                   start 0000             ___param_bank 0000                    ?_main 0000  
                  _TRISB 0F93                    _TRISD 0F95          __initialization 0916  
           __end_of_main 0916                   ??_main 0000            __activetblptr 0000  
                 _ADCON1 0FC1                   isa$std 0001             __mediumconst 0000  
             __accesstop 0060  __end_of__initialization 0916            ___rparam_used 0001  
         __pcstackCOMRAM 0000                  __Hparam 0000                  __Lparam 0000  
           __psmallconst 0800                  __pcinit 0916                  __ramtop 0800  
                __ptext0 0802     end_of_initialization 0916                _PORTDbits 0F83  
    start_initialization 0916              __smallconst 0800                 _LATBbits 0F8A  
               __Hrparam 0000                 __Lrparam 0000                 isa$xinst 0000  
