

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Mar 14 09:11:53 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    20   000000                     
    21                           ; Generated 23/03/2023 GMT
    22                           ; 
    23                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F4550 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55   000000                     _ADCON0	set	4034
    56   000000                     _ADRESL	set	4035
    57   000000                     _ADRESH	set	4036
    58   000000                     _LATBbits	set	3978
    59   000000                     _TRISBbits	set	3987
    60   000000                     _ADCON0bits	set	4034
    61   000000                     _GO	set	32273
    62   000000                     _ADON	set	32272
    63   000000                     _LATB	set	3978
    64   000000                     _TRISA	set	3986
    65   000000                     _TRISB	set	3987
    66   000000                     _ADCON2	set	4032
    67   000000                     _ADCON1	set	4033
    68                           
    69                           ; #config settings
    70                           
    71                           	psect	cinit
    72   0009F6                     __pcinit:
    73                           	callstack 0
    74   0009F6                     start_initialization:
    75                           	callstack 0
    76   0009F6                     __initialization:
    77                           	callstack 0
    78                           
    79                           ; Clear objects allocated to COMRAM (2 bytes)
    80   0009F6  6A0C               	clrf	(__pbssCOMRAM+1)& (0+255),c
    81   0009F8  6A0B               	clrf	__pbssCOMRAM& (0+255),c
    82   0009FA                     end_of_initialization:
    83                           	callstack 0
    84   0009FA                     __end_of__initialization:
    85                           	callstack 0
    86   0009FA  0100               	movlb	0
    87   0009FC  EF4F  F004         	goto	_main	;jump to C main() function
    88                           
    89                           	psect	bssCOMRAM
    90   00000B                     __pbssCOMRAM:
    91                           	callstack 0
    92   00000B                     _v1:
    93                           	callstack 0
    94   00000B                     	ds	2
    95                           
    96                           	psect	cstackCOMRAM
    97   000001                     __pcstackCOMRAM:
    98                           	callstack 0
    99   000001                     ?_ADC_read:
   100                           	callstack 0
   101   000001                     LCDWriteNibble@b:
   102                           	callstack 0
   103   000001                     ADC_read@chanel:
   104                           	callstack 0
   105                           
   106                           ; 2 bytes @ 0x0
   107   000001                     	ds	1
   108   000002                     LCDWriteNibble@ch:
   109                           	callstack 0
   110                           
   111                           ; 1 bytes @ 0x1
   112   000002                     	ds	1
   113   000003                     ??_ADC_read:
   114   000003                     ??_LCDPutCmd:
   115   000003                     ??_LCDPutChar:
   116                           
   117                           ; 1 bytes @ 0x2
   118   000003                     	ds	1
   119   000004                     LCDPutChar@ch:
   120                           	callstack 0
   121   000004                     LCDPutCmd@ch:
   122                           	callstack 0
   123                           
   124                           ; 1 bytes @ 0x3
   125   000004                     	ds	1
   126   000005                     ??_LCDInit:
   127   000005                     LCDPutStr@ptr:
   128                           	callstack 0
   129                           
   130                           ; 2 bytes @ 0x4
   131   000005                     	ds	2
   132   000007                     ADC_read@digital:
   133                           	callstack 0
   134                           
   135                           ; 2 bytes @ 0x6
   136   000007                     	ds	2
   137   000009                     ??_main:
   138                           
   139                           ; 1 bytes @ 0x8
   140   000009                     	ds	2
   141                           
   142 ;;
   143 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   144 ;;
   145 ;; *************** function _main *****************
   146 ;; Defined at:
   147 ;;		line 19 in file "C:/Users/Adriamuz/Desktop/EDA/MPLAB/Parcial3 P2/Comp/Parcial3 P2.X/main.c"
   148 ;; Parameters:    Size  Location     Type
   149 ;;		None
   150 ;; Auto vars:     Size  Location     Type
   151 ;;		None
   152 ;; Return value:  Size  Location     Type
   153 ;;                  1    wreg      void 
   154 ;; Registers used:
   155 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   156 ;; Tracked objects:
   157 ;;		On entry : 0/0
   158 ;;		On exit  : 0/0
   159 ;;		Unchanged: 0/0
   160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   161 ;;      Params:         0       0       0       0       0       0       0       0       0
   162 ;;      Locals:         0       0       0       0       0       0       0       0       0
   163 ;;      Temps:          2       0       0       0       0       0       0       0       0
   164 ;;      Totals:         2       0       0       0       0       0       0       0       0
   165 ;;Total ram usage:        2 bytes
   166 ;; Hardware stack levels required when called: 3
   167 ;; This function calls:
   168 ;;		_ADC_init
   169 ;;		_ADC_read
   170 ;;		_LCDInit
   171 ;;		_LCDPutCmd
   172 ;;		_LCDPutStr
   173 ;; This function is called by:
   174 ;;		Startup code after reset
   175 ;; This function uses a non-reentrant model
   176 ;;
   177                           
   178                           	psect	text0
   179   00089E                     __ptext0:
   180                           	callstack 0
   181   00089E                     _main:
   182                           	callstack 28
   183   00089E                     
   184                           ;C:/Users/Adriamuz/Desktop/EDA/MPLAB/Parcial3 P2/Comp/Parcial3 P2.X/main.c: 20:     LCDI
      +                          nit();
   185   00089E  EC79  F004         	call	_LCDInit	;wreg free
   186   0008A2                     
   187                           ;C:/Users/Adriamuz/Desktop/EDA/MPLAB/Parcial3 P2/Comp/Parcial3 P2.X/main.c: 21:     ADC_
      +                          init();
   188   0008A2  ECF1  F004         	call	_ADC_init	;wreg free
   189   0008A6                     l913:
   190                           
   191                           ;C:/Users/Adriamuz/Desktop/EDA/MPLAB/Parcial3 P2/Comp/Parcial3 P2.X/main.c: 23:         
      +                          v1 = ADC_read(0);
   192   0008A6  0E00               	movlw	0
   193   0008A8  6E02               	movwf	(ADC_read@chanel+1)^0,c
   194   0008AA  0E00               	movlw	0
   195   0008AC  6E01               	movwf	ADC_read@chanel^0,c
   196   0008AE  EC01  F004         	call	_ADC_read	;wreg free
   197   0008B2  C001  F00B         	movff	?_ADC_read,_v1
   198   0008B6  C002  F00C         	movff	?_ADC_read+1,_v1+1
   199   0008BA                     
   200                           ;C:/Users/Adriamuz/Desktop/EDA/MPLAB/Parcial3 P2/Comp/Parcial3 P2.X/main.c: 24:         
      +                          LCDPutCmd(0x02);
   201   0008BA  0E02               	movlw	2
   202   0008BC  EC96  F004         	call	_LCDPutCmd
   203   0008C0                     
   204                           ;C:/Users/Adriamuz/Desktop/EDA/MPLAB/Parcial3 P2/Comp/Parcial3 P2.X/main.c: 25:         
      +                          LCDPutCmd(0x01);
   205   0008C0  0E01               	movlw	1
   206   0008C2  EC96  F004         	call	_LCDPutCmd
   207   0008C6                     
   208                           ;C:/Users/Adriamuz/Desktop/EDA/MPLAB/Parcial3 P2/Comp/Parcial3 P2.X/main.c: 26:         
      +                          LCDPutStr(v1);
   209   0008C6  C00B  F005         	movff	_v1,LCDPutStr@ptr
   210   0008CA  C00C  F006         	movff	_v1+1,LCDPutStr@ptr+1
   211   0008CE  ECB0  F004         	call	_LCDPutStr	;wreg free
   212   0008D2                     
   213                           ;C:/Users/Adriamuz/Desktop/EDA/MPLAB/Parcial3 P2/Comp/Parcial3 P2.X/main.c: 27:         
      +                          _delay((unsigned long)((1000)*(20000000/4000.0)));
   214   0008D2  0E1A               	movlw	26
   215   0008D4  6E0A               	movwf	(??_main+1)^0,c
   216   0008D6  0E5E               	movlw	94
   217   0008D8  6E09               	movwf	??_main^0,c
   218   0008DA  0E6E               	movlw	110
   219   0008DC                     u197:
   220   0008DC  2EE8               	decfsz	wreg,f,c
   221   0008DE  D7FE               	bra	u197
   222   0008E0  2E09               	decfsz	??_main^0,f,c
   223   0008E2  D7FC               	bra	u197
   224   0008E4  2E0A               	decfsz	(??_main+1)^0,f,c
   225   0008E6  D7FA               	bra	u197
   226   0008E8  D000               	nop2	
   227   0008EA  EF53  F004         	goto	l913
   228   0008EE  EF00  F000         	goto	start
   229   0008F2                     __end_of_main:
   230                           	callstack 0
   231                           
   232 ;; *************** function _LCDPutStr *****************
   233 ;; Defined at:
   234 ;;		line 97 in file "C:/Users/Adriamuz/Desktop/EDA/MPLAB/Parcial3 P2/Comp/Parcial3 P2.X/LCD-XC4.c"
   235 ;; Parameters:    Size  Location     Type
   236 ;;  ptr             2    4[COMRAM] PTR unsigned char 
   237 ;;		 -> RAM(2047), 
   238 ;; Auto vars:     Size  Location     Type
   239 ;;		None
   240 ;; Return value:  Size  Location     Type
   241 ;;                  1    wreg      void 
   242 ;; Registers used:
   243 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   244 ;; Tracked objects:
   245 ;;		On entry : 0/0
   246 ;;		On exit  : 0/0
   247 ;;		Unchanged: 0/0
   248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   249 ;;      Params:         2       0       0       0       0       0       0       0       0
   250 ;;      Locals:         0       0       0       0       0       0       0       0       0
   251 ;;      Temps:          0       0       0       0       0       0       0       0       0
   252 ;;      Totals:         2       0       0       0       0       0       0       0       0
   253 ;;Total ram usage:        2 bytes
   254 ;; Hardware stack levels used: 1
   255 ;; Hardware stack levels required when called: 2
   256 ;; This function calls:
   257 ;;		_LCDPutChar
   258 ;; This function is called by:
   259 ;;		_main
   260 ;; This function uses a non-reentrant model
   261 ;;
   262                           
   263                           	psect	text1
   264   000960                     __ptext1:
   265                           	callstack 0
   266   000960                     _LCDPutStr:
   267                           	callstack 28
   268   000960                     
   269                           ;C:/Users/Adriamuz/Desktop/EDA/MPLAB/Parcial3 P2/Comp/Parcial3 P2.X/LCD-XC4.c: 97:     v
      +                          oid LCDPutStr(unsigned char *ptr);C:/Users/Adriamuz/Desktop/EDA/MPLAB/Parcial3 P2/Comp/P
      +                          arcial3 P2.X/LCD-XC4.c: 98:     {;C:/Users/Adriamuz/Desktop/EDA/MPLAB/Parcial3 P2/Comp/P
      +                          arcial3 P2.X/LCD-XC4.c: 99:         while(*ptr) LCDPutChar(*(ptr++));
   270   000960  EFBB  F004         	goto	l907
   271   000964                     l903:
   272   000964  C005  FFD9         	movff	LCDPutStr@ptr,fsr2l
   273   000968  C006  FFDA         	movff	LCDPutStr@ptr+1,fsr2h
   274   00096C  50DF               	movf	indf2,w,c
   275   00096E  ECC8  F004         	call	_LCDPutChar
   276   000972  4A05               	infsnz	LCDPutStr@ptr^0,f,c
   277   000974  2A06               	incf	(LCDPutStr@ptr+1)^0,f,c
   278   000976                     l907:
   279   000976  C005  FFD9         	movff	LCDPutStr@ptr,fsr2l
   280   00097A  C006  FFDA         	movff	LCDPutStr@ptr+1,fsr2h
   281   00097E  50DF               	movf	indf2,w,c
   282   000980  A4D8               	btfss	status,2,c
   283   000982  EFC5  F004         	goto	u181
   284   000986  EFC7  F004         	goto	u180
   285   00098A                     u181:
   286   00098A  EFB2  F004         	goto	l903
   287   00098E                     u180:
   288   00098E  0012               	return		;funcret
   289   000990                     __end_of_LCDPutStr:
   290                           	callstack 0
   291                           
   292 ;; *************** function _LCDPutChar *****************
   293 ;; Defined at:
   294 ;;		line 62 in file "C:/Users/Adriamuz/Desktop/EDA/MPLAB/Parcial3 P2/Comp/Parcial3 P2.X/LCD-XC4.c"
   295 ;; Parameters:    Size  Location     Type
   296 ;;  ch              1    wreg     unsigned char 
   297 ;; Auto vars:     Size  Location     Type
   298 ;;  ch              1    3[COMRAM] unsigned char 
   299 ;; Return value:  Size  Location     Type
   300 ;;                  1    wreg      void 
   301 ;; Registers used:
   302 ;;		wreg, status,2, status,0, cstack
   303 ;; Tracked objects:
   304 ;;		On entry : 0/0
   305 ;;		On exit  : 0/0
   306 ;;		Unchanged: 0/0
   307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   308 ;;      Params:         0       0       0       0       0       0       0       0       0
   309 ;;      Locals:         1       0       0       0       0       0       0       0       0
   310 ;;      Temps:          1       0       0       0       0       0       0       0       0
   311 ;;      Totals:         2       0       0       0       0       0       0       0       0
   312 ;;Total ram usage:        2 bytes
   313 ;; Hardware stack levels used: 1
   314 ;; Hardware stack levels required when called: 1
   315 ;; This function calls:
   316 ;;		_LCDWriteNibble
   317 ;; This function is called by:
   318 ;;		_LCDPutStr
   319 ;; This function uses a non-reentrant model
   320 ;;
   321                           
   322                           	psect	text2
   323   000990                     __ptext2:
   324                           	callstack 0
   325   000990                     _LCDPutChar:
   326                           	callstack 28
   327                           
   328                           ;incstack = 0
   329                           ;LCDPutChar@ch stored from wreg
   330   000990  6E04               	movwf	LCDPutChar@ch^0,c
   331   000992                     
   332                           ;C:/Users/Adriamuz/Desktop/EDA/MPLAB/Parcial3 P2/Comp/Parcial3 P2.X/LCD-XC4.c: 62:     v
      +                          oid LCDPutChar(unsigned char ch);C:/Users/Adriamuz/Desktop/EDA/MPLAB/Parcial3 P2/Comp/Pa
      +                          rcial3 P2.X/LCD-XC4.c: 63:     {;C:/Users/Adriamuz/Desktop/EDA/MPLAB/Parcial3 P2/Comp/Pa
      +                          rcial3 P2.X/LCD-XC4.c: 64:         _delay((unsigned long)((5)*(2000000L/4000.0)));
   333   000992  0E04               	movlw	4
   334   000994  6E03               	movwf	??_LCDPutChar^0,c
   335   000996  0E3E               	movlw	62
   336   000998                     u207:
   337   000998  2EE8               	decfsz	wreg,f,c
   338   00099A  D7FE               	bra	u207
   339   00099C  2E03               	decfsz	??_LCDPutChar^0,f,c
   340   00099E  D7FC               	bra	u207
   341   0009A0                     
   342                           ;C:/Users/Adriamuz/Desktop/EDA/MPLAB/Parcial3 P2/Comp/Parcial3 P2.X/LCD-XC4.c: 65:      
      +                             LCDWriteNibble(ch,1);
   343   0009A0  0E01               	movlw	1
   344   0009A2  6E01               	movwf	LCDWriteNibble@b^0,c
   345   0009A4  5004               	movf	LCDPutChar@ch^0,w,c
   346   0009A6  ECDE  F004         	call	_LCDWriteNibble
   347   0009AA                     
   348                           ;C:/Users/Adriamuz/Desktop/EDA/MPLAB/Parcial3 P2/Comp/Parcial3 P2.X/LCD-XC4.c: 66:      
      +                             ch = ch << 4;
   349   0009AA  3804               	swapf	LCDPutChar@ch^0,w,c
   350   0009AC  0BF0               	andlw	240
   351   0009AE  6E04               	movwf	LCDPutChar@ch^0,c
   352   0009B0                     
   353                           ;C:/Users/Adriamuz/Desktop/EDA/MPLAB/Parcial3 P2/Comp/Parcial3 P2.X/LCD-XC4.c: 67:      
      +                             LCDWriteNibble(ch,1);
   354   0009B0  0E01               	movlw	1
   355   0009B2  6E01               	movwf	LCDWriteNibble@b^0,c
   356   0009B4  5004               	movf	LCDPutChar@ch^0,w,c
   357   0009B6  ECDE  F004         	call	_LCDWriteNibble
   358   0009BA  0012               	return		;funcret
   359   0009BC                     __end_of_LCDPutChar:
   360                           	callstack 0
   361                           
   362 ;; *************** function _LCDInit *****************
   363 ;; Defined at:
   364 ;;		line 5 in file "C:/Users/Adriamuz/Desktop/EDA/MPLAB/Parcial3 P2/Comp/Parcial3 P2.X/LCD-XC4.c"
   365 ;; Parameters:    Size  Location     Type
   366 ;;		None
   367 ;; Auto vars:     Size  Location     Type
   368 ;;		None
   369 ;; Return value:  Size  Location     Type
   370 ;;                  1    wreg      void 
   371 ;; Registers used:
   372 ;;		wreg, status,2, status,0, cstack
   373 ;; Tracked objects:
   374 ;;		On entry : 0/0
   375 ;;		On exit  : 0/0
   376 ;;		Unchanged: 0/0
   377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   378 ;;      Params:         0       0       0       0       0       0       0       0       0
   379 ;;      Locals:         0       0       0       0       0       0       0       0       0
   380 ;;      Temps:          1       0       0       0       0       0       0       0       0
   381 ;;      Totals:         1       0       0       0       0       0       0       0       0
   382 ;;Total ram usage:        1 bytes
   383 ;; Hardware stack levels used: 1
   384 ;; Hardware stack levels required when called: 2
   385 ;; This function calls:
   386 ;;		_LCDPutCmd
   387 ;; This function is called by:
   388 ;;		_main
   389 ;; This function uses a non-reentrant model
   390 ;;
   391                           
   392                           	psect	text3
   393   0008F2                     __ptext3:
   394                           	callstack 0
   395   0008F2                     _LCDInit:
   396                           	callstack 28
   397   0008F2                     
   398                           ;C:/Users/Adriamuz/Desktop/EDA/MPLAB/Parcial3 P2/Comp/Parcial3 P2.X/LCD-XC4.c: 15:      
      +                             TRISB=0x0F;
   399   0008F2  0E0F               	movlw	15
   400   0008F4  6E93               	movwf	147,c	;volatile
   401   0008F6                     
   402                           ;C:/Users/Adriamuz/Desktop/EDA/MPLAB/Parcial3 P2/Comp/Parcial3 P2.X/LCD-XC4.c: 16:      
      +                             TRISBbits.RB2=0;
   403   0008F6  9493               	bcf	147,2,c	;volatile
   404   0008F8                     
   405                           ;C:/Users/Adriamuz/Desktop/EDA/MPLAB/Parcial3 P2/Comp/Parcial3 P2.X/LCD-XC4.c: 17:      
      +                             TRISBbits.RB1=0;
   406   0008F8  9293               	bcf	147,1,c	;volatile
   407   0008FA                     
   408                           ;C:/Users/Adriamuz/Desktop/EDA/MPLAB/Parcial3 P2/Comp/Parcial3 P2.X/LCD-XC4.c: 18:      
      +                             TRISBbits.RB0=0;
   409   0008FA  9093               	bcf	147,0,c	;volatile
   410   0008FC                     
   411                           ;C:/Users/Adriamuz/Desktop/EDA/MPLAB/Parcial3 P2/Comp/Parcial3 P2.X/LCD-XC4.c: 21:      
      +                             _delay((unsigned long)((15)*(2000000L/4000.0)));
   412   0008FC  0E0A               	movlw	10
   413   0008FE  6E05               	movwf	??_LCDInit^0,c
   414   000900  0EBC               	movlw	188
   415   000902                     u217:
   416   000902  2EE8               	decfsz	wreg,f,c
   417   000904  D7FE               	bra	u217
   418   000906  2E05               	decfsz	??_LCDInit^0,f,c
   419   000908  D7FC               	bra	u217
   420   00090A  D000               	nop2	
   421   00090C                     
   422                           ;C:/Users/Adriamuz/Desktop/EDA/MPLAB/Parcial3 P2/Comp/Parcial3 P2.X/LCD-XC4.c: 22:      
      +                             LCDPutCmd(0x32);
   423   00090C  0E32               	movlw	50
   424   00090E  EC96  F004         	call	_LCDPutCmd
   425   000912                     
   426                           ;C:/Users/Adriamuz/Desktop/EDA/MPLAB/Parcial3 P2/Comp/Parcial3 P2.X/LCD-XC4.c: 23:      
      +                             LCDPutCmd(0x28);
   427   000912  0E28               	movlw	40
   428   000914  EC96  F004         	call	_LCDPutCmd
   429   000918                     
   430                           ;C:/Users/Adriamuz/Desktop/EDA/MPLAB/Parcial3 P2/Comp/Parcial3 P2.X/LCD-XC4.c: 24:      
      +                             LCDPutCmd(0x0C);
   431   000918  0E0C               	movlw	12
   432   00091A  EC96  F004         	call	_LCDPutCmd
   433   00091E                     
   434                           ;C:/Users/Adriamuz/Desktop/EDA/MPLAB/Parcial3 P2/Comp/Parcial3 P2.X/LCD-XC4.c: 25:      
      +                             LCDPutCmd(0x01);
   435   00091E  0E01               	movlw	1
   436   000920  EC96  F004         	call	_LCDPutCmd
   437   000924                     
   438                           ;C:/Users/Adriamuz/Desktop/EDA/MPLAB/Parcial3 P2/Comp/Parcial3 P2.X/LCD-XC4.c: 26:      
      +                             LCDPutCmd(0x06);
   439   000924  0E06               	movlw	6
   440   000926  EC96  F004         	call	_LCDPutCmd
   441   00092A  0012               	return		;funcret
   442   00092C                     __end_of_LCDInit:
   443                           	callstack 0
   444                           
   445 ;; *************** function _LCDPutCmd *****************
   446 ;; Defined at:
   447 ;;		line 79 in file "C:/Users/Adriamuz/Desktop/EDA/MPLAB/Parcial3 P2/Comp/Parcial3 P2.X/LCD-XC4.c"
   448 ;; Parameters:    Size  Location     Type
   449 ;;  ch              1    wreg     unsigned char 
   450 ;; Auto vars:     Size  Location     Type
   451 ;;  ch              1    3[COMRAM] unsigned char 
   452 ;; Return value:  Size  Location     Type
   453 ;;                  1    wreg      void 
   454 ;; Registers used:
   455 ;;		wreg, status,2, status,0, cstack
   456 ;; Tracked objects:
   457 ;;		On entry : 0/0
   458 ;;		On exit  : 0/0
   459 ;;		Unchanged: 0/0
   460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   461 ;;      Params:         0       0       0       0       0       0       0       0       0
   462 ;;      Locals:         1       0       0       0       0       0       0       0       0
   463 ;;      Temps:          1       0       0       0       0       0       0       0       0
   464 ;;      Totals:         2       0       0       0       0       0       0       0       0
   465 ;;Total ram usage:        2 bytes
   466 ;; Hardware stack levels used: 1
   467 ;; Hardware stack levels required when called: 1
   468 ;; This function calls:
   469 ;;		_LCDWriteNibble
   470 ;; This function is called by:
   471 ;;		_main
   472 ;;		_LCDInit
   473 ;; This function uses a non-reentrant model
   474 ;;
   475                           
   476                           	psect	text4
   477   00092C                     __ptext4:
   478                           	callstack 0
   479   00092C                     _LCDPutCmd:
   480                           	callstack 29
   481                           
   482                           ;incstack = 0
   483                           ;LCDPutCmd@ch stored from wreg
   484   00092C  6E04               	movwf	LCDPutCmd@ch^0,c
   485   00092E                     
   486                           ;C:/Users/Adriamuz/Desktop/EDA/MPLAB/Parcial3 P2/Comp/Parcial3 P2.X/LCD-XC4.c: 79:     v
      +                          oid LCDPutCmd(unsigned char ch);C:/Users/Adriamuz/Desktop/EDA/MPLAB/Parcial3 P2/Comp/Par
      +                          cial3 P2.X/LCD-XC4.c: 80:     {;C:/Users/Adriamuz/Desktop/EDA/MPLAB/Parcial3 P2/Comp/Par
      +                          cial3 P2.X/LCD-XC4.c: 81:         _delay((unsigned long)((5)*(2000000L/4000.0)));
   487   00092E  0E04               	movlw	4
   488   000930  6E03               	movwf	??_LCDPutCmd^0,c
   489   000932  0E3E               	movlw	62
   490   000934                     u227:
   491   000934  2EE8               	decfsz	wreg,f,c
   492   000936  D7FE               	bra	u227
   493   000938  2E03               	decfsz	??_LCDPutCmd^0,f,c
   494   00093A  D7FC               	bra	u227
   495   00093C                     
   496                           ;C:/Users/Adriamuz/Desktop/EDA/MPLAB/Parcial3 P2/Comp/Parcial3 P2.X/LCD-XC4.c: 82:      
      +                             LCDWriteNibble(ch,0);
   497   00093C  0E00               	movlw	0
   498   00093E  6E01               	movwf	LCDWriteNibble@b^0,c
   499   000940  5004               	movf	LCDPutCmd@ch^0,w,c
   500   000942  ECDE  F004         	call	_LCDWriteNibble
   501   000946                     
   502                           ;C:/Users/Adriamuz/Desktop/EDA/MPLAB/Parcial3 P2/Comp/Parcial3 P2.X/LCD-XC4.c: 83:      
      +                             ch = ch << 4;
   503   000946  3804               	swapf	LCDPutCmd@ch^0,w,c
   504   000948  0BF0               	andlw	240
   505   00094A  6E04               	movwf	LCDPutCmd@ch^0,c
   506   00094C                     
   507                           ;C:/Users/Adriamuz/Desktop/EDA/MPLAB/Parcial3 P2/Comp/Parcial3 P2.X/LCD-XC4.c: 84:      
      +                             _delay((unsigned long)((1)*(2000000L/4000.0)));
   508   00094C  0EA6               	movlw	166
   509   00094E                     u237:
   510   00094E  2EE8               	decfsz	wreg,f,c
   511   000950  D7FE               	bra	u237
   512   000952  D000               	nop2	
   513   000954                     
   514                           ;C:/Users/Adriamuz/Desktop/EDA/MPLAB/Parcial3 P2/Comp/Parcial3 P2.X/LCD-XC4.c: 85:      
      +                             LCDWriteNibble(ch,0);
   515   000954  0E00               	movlw	0
   516   000956  6E01               	movwf	LCDWriteNibble@b^0,c
   517   000958  5004               	movf	LCDPutCmd@ch^0,w,c
   518   00095A  ECDE  F004         	call	_LCDWriteNibble
   519   00095E  0012               	return		;funcret
   520   000960                     __end_of_LCDPutCmd:
   521                           	callstack 0
   522                           
   523 ;; *************** function _LCDWriteNibble *****************
   524 ;; Defined at:
   525 ;;		line 39 in file "C:/Users/Adriamuz/Desktop/EDA/MPLAB/Parcial3 P2/Comp/Parcial3 P2.X/LCD-XC4.c"
   526 ;; Parameters:    Size  Location     Type
   527 ;;  ch              1    wreg     unsigned char 
   528 ;;  b               1    0[COMRAM] unsigned char 
   529 ;; Auto vars:     Size  Location     Type
   530 ;;  ch              1    1[COMRAM] unsigned char 
   531 ;; Return value:  Size  Location     Type
   532 ;;                  1    wreg      void 
   533 ;; Registers used:
   534 ;;		wreg, status,2, status,0
   535 ;; Tracked objects:
   536 ;;		On entry : 0/0
   537 ;;		On exit  : 0/0
   538 ;;		Unchanged: 0/0
   539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   540 ;;      Params:         1       0       0       0       0       0       0       0       0
   541 ;;      Locals:         1       0       0       0       0       0       0       0       0
   542 ;;      Temps:          0       0       0       0       0       0       0       0       0
   543 ;;      Totals:         2       0       0       0       0       0       0       0       0
   544 ;;Total ram usage:        2 bytes
   545 ;; Hardware stack levels used: 1
   546 ;; This function calls:
   547 ;;		Nothing
   548 ;; This function is called by:
   549 ;;		_LCDPutChar
   550 ;;		_LCDPutCmd
   551 ;; This function uses a non-reentrant model
   552 ;;
   553                           
   554                           	psect	text5
   555   0009BC                     __ptext5:
   556                           	callstack 0
   557   0009BC                     _LCDWriteNibble:
   558                           	callstack 28
   559                           
   560                           ;incstack = 0
   561                           ;LCDWriteNibble@ch stored from wreg
   562   0009BC  6E02               	movwf	LCDWriteNibble@ch^0,c
   563   0009BE                     
   564                           ;C:/Users/Adriamuz/Desktop/EDA/MPLAB/Parcial3 P2/Comp/Parcial3 P2.X/LCD-XC4.c: 39:     v
      +                          oid LCDWriteNibble(unsigned char ch,unsigned char b);C:/Users/Adriamuz/Desktop/EDA/MPLAB
      +                          /Parcial3 P2/Comp/Parcial3 P2.X/LCD-XC4.c: 40:     {;C:/Users/Adriamuz/Desktop/EDA/MPLAB
      +                          /Parcial3 P2/Comp/Parcial3 P2.X/LCD-XC4.c: 42:         ch = ch & 0xF0;
   565   0009BE  5002               	movf	LCDWriteNibble@ch^0,w,c
   566   0009C0  0BF0               	andlw	240
   567   0009C2  6E02               	movwf	LCDWriteNibble@ch^0,c
   568                           
   569                           ;C:/Users/Adriamuz/Desktop/EDA/MPLAB/Parcial3 P2/Comp/Parcial3 P2.X/LCD-XC4.c: 44:      
      +                             LATB = LATB & 0x0F;
   570   0009C4  508A               	movf	138,w,c	;volatile
   571   0009C6  0B0F               	andlw	15
   572   0009C8  6E8A               	movwf	138,c	;volatile
   573                           
   574                           ;C:/Users/Adriamuz/Desktop/EDA/MPLAB/Parcial3 P2/Comp/Parcial3 P2.X/LCD-XC4.c: 45:      
      +                             LATB = LATB | ch;
   575   0009CA  508A               	movf	138,w,c	;volatile
   576   0009CC  1002               	iorwf	LCDWriteNibble@ch^0,w,c
   577   0009CE  6E8A               	movwf	138,c	;volatile
   578   0009D0                     
   579                           ;C:/Users/Adriamuz/Desktop/EDA/MPLAB/Parcial3 P2/Comp/Parcial3 P2.X/LCD-XC4.c: 47:      
      +                             LATBbits.LB0 = b;
   580   0009D0  B001               	btfsc	LCDWriteNibble@b^0,0,c
   581   0009D2  D002               	bra	u105
   582   0009D4  908A               	bcf	138,0,c	;volatile
   583   0009D6  D001               	bra	u106
   584   0009D8                     u105:
   585   0009D8  808A               	bsf	138,0,c	;volatile
   586   0009DA                     u106:
   587   0009DA                     
   588                           ;C:/Users/Adriamuz/Desktop/EDA/MPLAB/Parcial3 P2/Comp/Parcial3 P2.X/LCD-XC4.c: 48:      
      +                             LATBbits.LB1 = 0;
   589   0009DA  928A               	bcf	138,1,c	;volatile
   590   0009DC                     
   591                           ;C:/Users/Adriamuz/Desktop/EDA/MPLAB/Parcial3 P2/Comp/Parcial3 P2.X/LCD-XC4.c: 49:      
      +                             LATBbits.LB2 = 1;
   592   0009DC  848A               	bsf	138,2,c	;volatile
   593   0009DE                     
   594                           ;C:/Users/Adriamuz/Desktop/EDA/MPLAB/Parcial3 P2/Comp/Parcial3 P2.X/LCD-XC4.c: 50:      
      +                             LATBbits.LB2 = 0;
   595   0009DE  948A               	bcf	138,2,c	;volatile
   596   0009E0  0012               	return		;funcret
   597   0009E2                     __end_of_LCDWriteNibble:
   598                           	callstack 0
   599                           
   600 ;; *************** function _ADC_read *****************
   601 ;; Defined at:
   602 ;;		line 41 in file "C:/Users/Adriamuz/Desktop/EDA/MPLAB/Parcial3 P2/Comp/Parcial3 P2.X/main.c"
   603 ;; Parameters:    Size  Location     Type
   604 ;;  chanel          2    0[COMRAM] int 
   605 ;; Auto vars:     Size  Location     Type
   606 ;;  digital         2    6[COMRAM] int 
   607 ;; Return value:  Size  Location     Type
   608 ;;                  2    0[COMRAM] int 
   609 ;; Registers used:
   610 ;;		wreg, status,2, status,0
   611 ;; Tracked objects:
   612 ;;		On entry : 0/0
   613 ;;		On exit  : 0/0
   614 ;;		Unchanged: 0/0
   615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   616 ;;      Params:         2       0       0       0       0       0       0       0       0
   617 ;;      Locals:         2       0       0       0       0       0       0       0       0
   618 ;;      Temps:          4       0       0       0       0       0       0       0       0
   619 ;;      Totals:         8       0       0       0       0       0       0       0       0
   620 ;;Total ram usage:        8 bytes
   621 ;; Hardware stack levels used: 1
   622 ;; This function calls:
   623 ;;		Nothing
   624 ;; This function is called by:
   625 ;;		_main
   626 ;; This function uses a non-reentrant model
   627 ;;
   628                           
   629                           	psect	text6
   630   000802                     __ptext6:
   631                           	callstack 0
   632   000802                     _ADC_read:
   633                           	callstack 30
   634   000802                     
   635                           ;C:/Users/Adriamuz/Desktop/EDA/MPLAB/Parcial3 P2/Comp/Parcial3 P2.X/main.c: 43:     ADCO
      +                          N0 = (ADCON0 & 0b11000011)|((chanel << 2) & 0b00111100);
   636   000802  C001  F003         	movff	ADC_read@chanel,??_ADC_read
   637   000806  90D8               	bcf	status,0,c
   638   000808  3603               	rlcf	??_ADC_read^0,f,c
   639   00080A  90D8               	bcf	status,0,c
   640   00080C  3603               	rlcf	??_ADC_read^0,f,c
   641   00080E  0E3C               	movlw	60
   642   000810  1603               	andwf	??_ADC_read^0,f,c
   643   000812  50C2               	movf	194,w,c	;volatile
   644   000814  0BC3               	andlw	195
   645   000816  1003               	iorwf	??_ADC_read^0,w,c
   646   000818  6EC2               	movwf	194,c	;volatile
   647   00081A                     
   648                           ;C:/Users/Adriamuz/Desktop/EDA/MPLAB/Parcial3 P2/Comp/Parcial3 P2.X/main.c: 44:     ADCO
      +                          N0 |=((1<<ADON)| (1 << GO));
   649   00081A  B2C2               	btfsc	4034,1,c	;volatile
   650   00081C  EF12  F004         	goto	u111
   651   000820  EF16  F004         	goto	u110
   652   000824                     u111:
   653   000824  6A03               	clrf	??_ADC_read^0,c
   654   000826  2A03               	incf	??_ADC_read^0,f,c
   655   000828  EF17  F004         	goto	u128
   656   00082C                     u110:
   657   00082C  6A03               	clrf	??_ADC_read^0,c
   658   00082E                     u128:
   659   00082E  0E01               	movlw	1
   660   000830  6E04               	movwf	(??_ADC_read+1)^0,c
   661   000832  2A03               	incf	??_ADC_read^0,f,c
   662   000834  EF1E  F004         	goto	u134
   663   000838                     u135:
   664   000838  90D8               	bcf	status,0,c
   665   00083A  3604               	rlcf	(??_ADC_read+1)^0,f,c
   666   00083C                     u134:
   667   00083C  2E03               	decfsz	??_ADC_read^0,f,c
   668   00083E  EF1C  F004         	goto	u135
   669   000842  B0C2               	btfsc	4034,0,c	;volatile
   670   000844  EF26  F004         	goto	u141
   671   000848  EF2A  F004         	goto	u140
   672   00084C                     u141:
   673   00084C  6A05               	clrf	(??_ADC_read+2)^0,c
   674   00084E  2A05               	incf	(??_ADC_read+2)^0,f,c
   675   000850  EF2B  F004         	goto	u158
   676   000854                     u140:
   677   000854  6A05               	clrf	(??_ADC_read+2)^0,c
   678   000856                     u158:
   679   000856  0E01               	movlw	1
   680   000858  6E06               	movwf	(??_ADC_read+3)^0,c
   681   00085A  2A05               	incf	(??_ADC_read+2)^0,f,c
   682   00085C  EF32  F004         	goto	u164
   683   000860                     u165:
   684   000860  90D8               	bcf	status,0,c
   685   000862  3606               	rlcf	(??_ADC_read+3)^0,f,c
   686   000864                     u164:
   687   000864  2E05               	decfsz	(??_ADC_read+2)^0,f,c
   688   000866  EF30  F004         	goto	u165
   689   00086A  5006               	movf	(??_ADC_read+3)^0,w,c
   690   00086C  1004               	iorwf	(??_ADC_read+1)^0,w,c
   691   00086E  12C2               	iorwf	194,f,c	;volatile
   692   000870                     l46:
   693   000870  B2C2               	btfsc	194,1,c	;volatile
   694   000872  EF3D  F004         	goto	u171
   695   000876  EF3F  F004         	goto	u170
   696   00087A                     u171:
   697   00087A  EF38  F004         	goto	l46
   698   00087E                     u170:
   699   00087E                     
   700                           ;C:/Users/Adriamuz/Desktop/EDA/MPLAB/Parcial3 P2/Comp/Parcial3 P2.X/main.c: 46:     digi
      +                          tal = (ADRESH*256)|(ADRESL);
   701   00087E  50C3               	movf	195,w,c	;volatile
   702   000880  CFC4 F003          	movff	4036,??_ADC_read	;volatile
   703   000884  6A04               	clrf	(??_ADC_read+1)^0,c
   704   000886  C003  F004         	movff	??_ADC_read,??_ADC_read+1
   705   00088A  6A03               	clrf	??_ADC_read^0,c
   706   00088C  1003               	iorwf	??_ADC_read^0,w,c
   707   00088E  6E07               	movwf	ADC_read@digital^0,c
   708   000890  5004               	movf	(??_ADC_read+1)^0,w,c
   709   000892  6E08               	movwf	(ADC_read@digital+1)^0,c
   710   000894                     
   711                           ;C:/Users/Adriamuz/Desktop/EDA/MPLAB/Parcial3 P2/Comp/Parcial3 P2.X/main.c: 47:     retu
      +                          rn digital;
   712   000894  C007  F001         	movff	ADC_read@digital,?_ADC_read
   713   000898  C008  F002         	movff	ADC_read@digital+1,?_ADC_read+1
   714   00089C  0012               	return		;funcret
   715   00089E                     __end_of_ADC_read:
   716                           	callstack 0
   717                           
   718 ;; *************** function _ADC_init *****************
   719 ;; Defined at:
   720 ;;		line 32 in file "C:/Users/Adriamuz/Desktop/EDA/MPLAB/Parcial3 P2/Comp/Parcial3 P2.X/main.c"
   721 ;; Parameters:    Size  Location     Type
   722 ;;		None
   723 ;; Auto vars:     Size  Location     Type
   724 ;;		None
   725 ;; Return value:  Size  Location     Type
   726 ;;                  1    wreg      void 
   727 ;; Registers used:
   728 ;;		wreg, status,2
   729 ;; Tracked objects:
   730 ;;		On entry : 0/0
   731 ;;		On exit  : 0/0
   732 ;;		Unchanged: 0/0
   733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   734 ;;      Params:         0       0       0       0       0       0       0       0       0
   735 ;;      Locals:         0       0       0       0       0       0       0       0       0
   736 ;;      Temps:          0       0       0       0       0       0       0       0       0
   737 ;;      Totals:         0       0       0       0       0       0       0       0       0
   738 ;;Total ram usage:        0 bytes
   739 ;; Hardware stack levels used: 1
   740 ;; This function calls:
   741 ;;		Nothing
   742 ;; This function is called by:
   743 ;;		_main
   744 ;; This function uses a non-reentrant model
   745 ;;
   746                           
   747                           	psect	text7
   748   0009E2                     __ptext7:
   749                           	callstack 0
   750   0009E2                     _ADC_init:
   751                           	callstack 30
   752   0009E2                     
   753                           ;C:/Users/Adriamuz/Desktop/EDA/MPLAB/Parcial3 P2/Comp/Parcial3 P2.X/main.c: 33:     TRIS
      +                          A = 0xFF;
   754   0009E2  6892               	setf	146,c	;volatile
   755   0009E4                     
   756                           ;C:/Users/Adriamuz/Desktop/EDA/MPLAB/Parcial3 P2/Comp/Parcial3 P2.X/main.c: 34:     ADCO
      +                          N1 = 0x0E;
   757   0009E4  0E0E               	movlw	14
   758   0009E6  6EC1               	movwf	193,c	;volatile
   759                           
   760                           ;C:/Users/Adriamuz/Desktop/EDA/MPLAB/Parcial3 P2/Comp/Parcial3 P2.X/main.c: 35:     ADCO
      +                          N2 = 0xB5;
   761   0009E8  0EB5               	movlw	181
   762   0009EA  6EC0               	movwf	192,c	;volatile
   763                           
   764                           ;C:/Users/Adriamuz/Desktop/EDA/MPLAB/Parcial3 P2/Comp/Parcial3 P2.X/main.c: 37:     ADRE
      +                          SH = 0;
   765   0009EC  0E00               	movlw	0
   766   0009EE  6EC4               	movwf	196,c	;volatile
   767                           
   768                           ;C:/Users/Adriamuz/Desktop/EDA/MPLAB/Parcial3 P2/Comp/Parcial3 P2.X/main.c: 38:     ADRE
      +                          SL = 0;
   769   0009F0  0E00               	movlw	0
   770   0009F2  6EC3               	movwf	195,c	;volatile
   771   0009F4  0012               	return		;funcret
   772   0009F6                     __end_of_ADC_init:
   773                           	callstack 0
   774                           
   775                           	psect	smallconst
   776   000800                     __psmallconst:
   777                           	callstack 0
   778   000800  00                 	db	0
   779   000801  00                 	db	0	; dummy byte at the end
   780   000000                     
   781                           	psect	rparam
   782   000000                     
   783                           	psect	config
   784                           
   785                           ;Config register CONFIG1L @ 0x300000
   786                           ;	PLL Prescaler Selection bits
   787                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   788                           ;	System Clock Postscaler Selection bits
   789                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   790                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   791                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   792   300000                     	org	3145728
   793   300000  00                 	db	0
   794                           
   795                           ;Config register CONFIG1H @ 0x300001
   796                           ;	Oscillator Selection bits
   797                           ;	FOSC = HS, HS oscillator (HS)
   798                           ;	Fail-Safe Clock Monitor Enable bit
   799                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   800                           ;	Internal/External Oscillator Switchover bit
   801                           ;	IESO = OFF, Oscillator Switchover mode disabled
   802   300001                     	org	3145729
   803   300001  0C                 	db	12
   804                           
   805                           ;Config register CONFIG2L @ 0x300002
   806                           ;	Power-up Timer Enable bit
   807                           ;	PWRT = OFF, PWRT disabled
   808                           ;	Brown-out Reset Enable bits
   809                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   810                           ;	Brown-out Reset Voltage bits
   811                           ;	BORV = 3, Minimum setting 2.05V
   812                           ;	USB Voltage Regulator Enable bit
   813                           ;	VREGEN = OFF, USB voltage regulator disabled
   814   300002                     	org	3145730
   815   300002  1F                 	db	31
   816                           
   817                           ;Config register CONFIG2H @ 0x300003
   818                           ;	Watchdog Timer Enable bit
   819                           ;	WDT = ON, WDT enabled
   820                           ;	Watchdog Timer Postscale Select bits
   821                           ;	WDTPS = 32768, 1:32768
   822   300003                     	org	3145731
   823   300003  1F                 	db	31
   824                           
   825                           ; Padding undefined space
   826   300004                     	org	3145732
   827   300004  FF                 	db	255
   828                           
   829                           ;Config register CONFIG3H @ 0x300005
   830                           ;	CCP2 MUX bit
   831                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   832                           ;	PORTB A/D Enable bit
   833                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   834                           ;	Low-Power Timer 1 Oscillator Enable bit
   835                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   836                           ;	MCLR Pin Enable bit
   837                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   838   300005                     	org	3145733
   839   300005  83                 	db	131
   840                           
   841                           ;Config register CONFIG4L @ 0x300006
   842                           ;	Stack Full/Underflow Reset Enable bit
   843                           ;	STVREN = ON, Stack full/underflow will cause Reset
   844                           ;	Single-Supply ICSP Enable bit
   845                           ;	LVP = ON, Single-Supply ICSP enabled
   846                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   847                           ;	ICPRT = OFF, ICPORT disabled
   848                           ;	Extended Instruction Set Enable bit
   849                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   850                           ;	Background Debugger Enable bit
   851                           ;	DEBUG = 0x1, unprogrammed default
   852   300006                     	org	3145734
   853   300006  85                 	db	133
   854                           
   855                           ; Padding undefined space
   856   300007                     	org	3145735
   857   300007  FF                 	db	255
   858                           
   859                           ;Config register CONFIG5L @ 0x300008
   860                           ;	Code Protection bit
   861                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   862                           ;	Code Protection bit
   863                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   864                           ;	Code Protection bit
   865                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   866                           ;	Code Protection bit
   867                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   868   300008                     	org	3145736
   869   300008  0F                 	db	15
   870                           
   871                           ;Config register CONFIG5H @ 0x300009
   872                           ;	Boot Block Code Protection bit
   873                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   874                           ;	Data EEPROM Code Protection bit
   875                           ;	CPD = OFF, Data EEPROM is not code-protected
   876   300009                     	org	3145737
   877   300009  C0                 	db	192
   878                           
   879                           ;Config register CONFIG6L @ 0x30000A
   880                           ;	Write Protection bit
   881                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   882                           ;	Write Protection bit
   883                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   884                           ;	Write Protection bit
   885                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   886                           ;	Write Protection bit
   887                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   888   30000A                     	org	3145738
   889   30000A  0F                 	db	15
   890                           
   891                           ;Config register CONFIG6H @ 0x30000B
   892                           ;	Configuration Register Write Protection bit
   893                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   894                           ;	Boot Block Write Protection bit
   895                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   896                           ;	Data EEPROM Write Protection bit
   897                           ;	WRTD = OFF, Data EEPROM is not write-protected
   898   30000B                     	org	3145739
   899   30000B  E0                 	db	224
   900                           
   901                           ;Config register CONFIG7L @ 0x30000C
   902                           ;	Table Read Protection bit
   903                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   904                           ;	Table Read Protection bit
   905                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   906                           ;	Table Read Protection bit
   907                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   908                           ;	Table Read Protection bit
   909                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   910   30000C                     	org	3145740
   911   30000C  0F                 	db	15
   912                           
   913                           ;Config register CONFIG7H @ 0x30000D
   914                           ;	Boot Block Table Read Protection bit
   915                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   916   30000D                     	org	3145741
   917   30000D  40                 	db	64
   918                           tosu	equ	0xFFF
   919                           tosh	equ	0xFFE
   920                           tosl	equ	0xFFD
   921                           stkptr	equ	0xFFC
   922                           pclatu	equ	0xFFB
   923                           pclath	equ	0xFFA
   924                           pcl	equ	0xFF9
   925                           tblptru	equ	0xFF8
   926                           tblptrh	equ	0xFF7
   927                           tblptrl	equ	0xFF6
   928                           tablat	equ	0xFF5
   929                           prodh	equ	0xFF4
   930                           prodl	equ	0xFF3
   931                           indf0	equ	0xFEF
   932                           postinc0	equ	0xFEE
   933                           postdec0	equ	0xFED
   934                           preinc0	equ	0xFEC
   935                           plusw0	equ	0xFEB
   936                           fsr0h	equ	0xFEA
   937                           fsr0l	equ	0xFE9
   938                           wreg	equ	0xFE8
   939                           indf1	equ	0xFE7
   940                           postinc1	equ	0xFE6
   941                           postdec1	equ	0xFE5
   942                           preinc1	equ	0xFE4
   943                           plusw1	equ	0xFE3
   944                           fsr1h	equ	0xFE2
   945                           fsr1l	equ	0xFE1
   946                           bsr	equ	0xFE0
   947                           indf2	equ	0xFDF
   948                           postinc2	equ	0xFDE
   949                           postdec2	equ	0xFDD
   950                           preinc2	equ	0xFDC
   951                           plusw2	equ	0xFDB
   952                           fsr2h	equ	0xFDA
   953                           fsr2l	equ	0xFD9
   954                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     10      12
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    LCDPutStr@ptr	PTR unsigned char  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 


Critical Paths under _main in COMRAM

    _main->_ADC_read
    _LCDPutStr->_LCDPutChar
    _LCDPutChar->_LCDWriteNibble
    _LCDInit->_LCDPutCmd
    _LCDPutCmd->_LCDWriteNibble

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1557
                                              8 COMRAM     2     2      0
                           _ADC_init
                           _ADC_read
                            _LCDInit
                          _LCDPutCmd
                          _LCDPutStr
 ---------------------------------------------------------------------------------
 (1) _LCDPutStr                                            2     0      2     559
                                              4 COMRAM     2     0      2
                         _LCDPutChar
 ---------------------------------------------------------------------------------
 (2) _LCDPutChar                                           2     2      0     438
                                              2 COMRAM     2     2      0
                     _LCDWriteNibble
 ---------------------------------------------------------------------------------
 (1) _LCDInit                                              1     1      0     438
                                              4 COMRAM     1     1      0
                          _LCDPutCmd
 ---------------------------------------------------------------------------------
 (1) _LCDPutCmd                                            2     2      0     438
                                              2 COMRAM     2     2      0
                     _LCDWriteNibble
 ---------------------------------------------------------------------------------
 (3) _LCDWriteNibble                                       2     1      1     371
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _ADC_read                                             8     6      2     122
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _ADC_read
   _LCDInit
     _LCDPutCmd
       _LCDWriteNibble
   _LCDPutCmd
   _LCDPutStr
     _LCDPutChar
       _LCDWriteNibble

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      25        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      A       C       1       12.6%
BITBIGSFRhhh        3B      0       0      20        0.0%
BITBIGSFRhl         2C      0       0      21        0.0%
BITBIGSFRll         2A      0       0      23        0.0%
BITBIGSFRlh          7      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       C      24        0.0%
DATA                 0      0       C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Mar 14 09:11:53 2024

                     l43 09F4              ?_LCDPutChar 0001                       l46 0870  
                     l70 09BA                       l64 092A                       l49 089C  
                     l73 095E                       l67 09E0                       l79 098E  
                     _GO 7E11                       _v1 000B                      l803 09E2  
                    l805 09E4                      l901 0960                      l903 0964  
                    l911 08A2                      l841 09BE                      l905 0972  
                    l921 08D2                      l913 08A6                      l843 09D0  
                    l851 092E                      l907 0976                      l915 08BA  
                    l845 09DA                      l853 093C                      l861 0992  
                    l917 08C0                      l909 089E                      l847 09DC  
                    l855 0946                      l871 08F6                      l863 09A0  
                    l919 08C6                      l849 09DE                      l857 094C  
                    l881 0912                      l873 08F8                      l865 09AA  
                    l891 0802                      l859 0954                      l883 0918  
                    l875 08FA                      l867 09B0                      l893 081A  
                    l885 091E                      l877 08FC                      l869 08F2  
                    l895 087E                      l887 0924                      l879 090C  
                    l897 0894                      l889 0802                      u110 082C  
                    u111 0824                      u105 09D8                      u106 09DA  
                    u140 0854                      u141 084C                      u134 083C  
                    u135 0838                      u207 0998                      u128 082E  
                    u217 0902                      u170 087E                      u171 087A  
                    u227 0934                      u164 0864                      u180 098E  
                    u165 0860                      u237 094E                      u181 098A  
                    u158 0856                      u197 08DC                      wreg 0FE8  
        __end_of_LCDInit 092C                     _ADON 7E10                     _LATB 0F8A  
                   _main 089E                     fsr2h 0FDA                     indf2 0FDF  
                   fsr2l 0FD9                     start 0000         __end_of_ADC_init 09F6  
       __end_of_ADC_read 089E             ___param_bank 0000              LCDPutCmd@ch 0004  
                  ?_main 0001                    _TRISA 0F92                    _TRISB 0F93  
                  status 0FD8          __initialization 09F6             __end_of_main 08F2  
         ADC_read@chanel 0001                   ??_main 0009            __activetblptr 0000  
              ??_LCDInit 0005        __end_of_LCDPutCmd 0960             LCDPutChar@ch 0004  
      __end_of_LCDPutStr 0990                   _ADCON0 0FC2                   _ADCON1 0FC1  
                 _ADCON2 0FC0                   _ADRESH 0FC4                   _ADRESL 0FC3  
           LCDPutStr@ptr 0005           _LCDWriteNibble 09BC                   isa$std 0001  
           __mediumconst 0000                ?_ADC_init 0001                ?_ADC_read 0001  
 __end_of_LCDWriteNibble 09E2               __accesstop 0060  __end_of__initialization 09FA  
          ___rparam_used 0001           __pcstackCOMRAM 0001             ??_LCDPutChar 0003  
        ADC_read@digital 0007               ??_ADC_init 0001               ??_ADC_read 0003  
        ?_LCDWriteNibble 0001       __end_of_LCDPutChar 09BC                  _LCDInit 08F2  
                __Hparam 0000                  __Lparam 0000             __psmallconst 0800  
                __pcinit 09F6                  __ramtop 0800                  __ptext0 089E  
                __ptext1 0960                  __ptext2 0990                  __ptext3 08F2  
                __ptext4 092C                  __ptext5 09BC                  __ptext6 0802  
                __ptext7 09E2                _LCDPutCmd 092C                _LCDPutStr 0960  
   end_of_initialization 09FA                _TRISBbits 0F93               ?_LCDPutCmd 0001  
             ?_LCDPutStr 0005      start_initialization 09F6         ??_LCDWriteNibble 0002  
               ?_LCDInit 0001              __pbssCOMRAM 000B              ??_LCDPutCmd 0003  
            ??_LCDPutStr 0007         LCDWriteNibble@ch 0002              __smallconst 0800  
               _ADC_init 09E2                 _ADC_read 0802                 _LATBbits 0F8A  
             _ADCON0bits 0FC2                 __Hrparam 0000                 __Lrparam 0000  
        LCDWriteNibble@b 0001                 isa$xinst 0000               _LCDPutChar 0990  
