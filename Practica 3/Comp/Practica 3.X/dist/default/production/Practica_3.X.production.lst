

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Feb 01 08:33:22 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    14   000000                     
    15                           ; Generated 23/03/2023 GMT
    16                           ; 
    17                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F4550 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49   000000                     
    50                           	psect	idataCOMRAM
    51   0008A2                     __pidataCOMRAM:
    52                           	callstack 0
    53                           
    54                           ;initializer for _display_array
    55   0008A2  003F               	dw	63
    56   0008A4  0006               	dw	6
    57   0008A6  005B               	dw	91
    58   0008A8  004F               	dw	79
    59   0008AA  0066               	dw	102
    60   0008AC  006D               	dw	109
    61   0008AE  007D               	dw	125
    62   0008B0  0007               	dw	7
    63   0008B2  007F               	dw	127
    64   0008B4  0067               	dw	103
    65   0008B6  0077               	dw	119
    66   0008B8  007C               	dw	124
    67   0008BA  0039               	dw	57
    68   0008BC  005E               	dw	94
    69   0008BE  0079               	dw	121
    70   0008C0  0071               	dw	113
    71   000000                     _LATD	set	3980
    72   000000                     _TRISD	set	3989
    73   000000                     _ADCON1	set	4033
    74   000000                     _TRISEbits	set	3990
    75   000000                     _LATEbits	set	3981
    76                           
    77                           ; #config settings
    78                           
    79                           	psect	cinit
    80   00087C                     __pcinit:
    81                           	callstack 0
    82   00087C                     start_initialization:
    83                           	callstack 0
    84   00087C                     __initialization:
    85                           	callstack 0
    86                           
    87                           ; Initialize objects allocated to COMRAM (32 bytes)
    88                           ; load TBLPTR registers with __pidataCOMRAM
    89   00087C  0EA2               	movlw	low __pidataCOMRAM
    90   00087E  6EF6               	movwf	tblptrl,c
    91   000880  0E08               	movlw	high __pidataCOMRAM
    92   000882  6EF7               	movwf	tblptrh,c
    93   000884  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    94   000886  6EF8               	movwf	tblptru,c
    95   000888  EE00  F001         	lfsr	0,__pdataCOMRAM
    96   00088C  EE10 F020          	lfsr	1,32
    97   000890                     copy_data0:
    98   000890  0009               	tblrd		*+
    99   000892  CFF5 FFEE          	movff	tablat,postinc0
   100   000896  50E5               	movf	postdec1,w,c
   101   000898  50E1               	movf	fsr1l,w,c
   102   00089A  E1FA               	bnz	copy_data0
   103   00089C                     end_of_initialization:
   104                           	callstack 0
   105   00089C                     __end_of__initialization:
   106                           	callstack 0
   107   00089C  0100               	movlb	0
   108   00089E  EF01  F004         	goto	_main	;jump to C main() function
   109                           
   110                           	psect	dataCOMRAM
   111   000001                     __pdataCOMRAM:
   112                           	callstack 0
   113   000001                     _display_array:
   114                           	callstack 0
   115   000001                     	ds	32
   116                           
   117                           	psect	cstackCOMRAM
   118   000021                     __pcstackCOMRAM:
   119                           	callstack 0
   120   000021                     ??_main:
   121                           
   122                           ; 1 bytes @ 0x0
   123   000021                     	ds	2
   124   000023                     main@i:
   125                           	callstack 0
   126                           
   127                           ; 2 bytes @ 0x2
   128   000023                     	ds	2
   129                           
   130 ;;
   131 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   132 ;;
   133 ;; *************** function _main *****************
   134 ;; Defined at:
   135 ;;		line 17 in file "main.c"
   136 ;; Parameters:    Size  Location     Type
   137 ;;		None
   138 ;; Auto vars:     Size  Location     Type
   139 ;;  i               2    2[COMRAM] int 
   140 ;; Return value:  Size  Location     Type
   141 ;;                  1    wreg      void 
   142 ;; Registers used:
   143 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   144 ;; Tracked objects:
   145 ;;		On entry : 0/0
   146 ;;		On exit  : 0/0
   147 ;;		Unchanged: 0/0
   148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   149 ;;      Params:         0       0       0       0       0       0       0       0       0
   150 ;;      Locals:         2       0       0       0       0       0       0       0       0
   151 ;;      Temps:          2       0       0       0       0       0       0       0       0
   152 ;;      Totals:         4       0       0       0       0       0       0       0       0
   153 ;;Total ram usage:        4 bytes
   154 ;; This function calls:
   155 ;;		Nothing
   156 ;; This function is called by:
   157 ;;		Startup code after reset
   158 ;; This function uses a non-reentrant model
   159 ;;
   160                           
   161                           	psect	text0
   162   000802                     __ptext0:
   163                           	callstack 0
   164   000802                     _main:
   165                           	callstack 31
   166   000802                     
   167                           ;main.c: 18:     ADCON1 = 0X0F;
   168   000802  0E0F               	movlw	15
   169   000804  6EC1               	movwf	193,c	;volatile
   170                           
   171                           ;main.c: 19:     TRISD = 0;
   172   000806  0E00               	movlw	0
   173   000808  6E95               	movwf	149,c	;volatile
   174   00080A                     
   175                           ;main.c: 20:     TRISEbits.RE0 = 0;
   176   00080A  9096               	bcf	150,0,c	;volatile
   177   00080C                     
   178                           ;main.c: 21:     TRISEbits.RE1 = 0;
   179   00080C  9296               	bcf	150,1,c	;volatile
   180                           
   181                           ;main.c: 23:     for(int i=0; i<=15; i++){
   182   00080E  0E00               	movlw	0
   183   000810  6E24               	movwf	(main@i+1)^0,c
   184   000812  0E00               	movlw	0
   185   000814  6E23               	movwf	main@i^0,c
   186   000816                     l709:
   187                           
   188                           ;main.c: 24:         LATD = display_array[i];
   189   000816  5023               	movf	main@i^0,w,c
   190   000818  0D02               	mullw	2
   191   00081A  50F3               	movf	243,w,c
   192   00081C  0F01               	addlw	low _display_array
   193   00081E  6ED9               	movwf	fsr2l,c
   194   000820  6ADA               	clrf	fsr2h,c
   195   000822  50DF               	movf	indf2,w,c
   196   000824  6E8C               	movwf	140,c	;volatile
   197   000826                     
   198                           ;main.c: 25:         if(i%2 == 0){
   199   000826  B023               	btfsc	main@i^0,0,c
   200   000828  EF18  F004         	goto	u11
   201   00082C  EF1A  F004         	goto	u10
   202   000830                     u11:
   203   000830  EF1E  F004         	goto	l21
   204   000834                     u10:
   205   000834                     
   206                           ;main.c: 26:             LATEbits.LE0 = 0;
   207   000834  908D               	bcf	141,0,c	;volatile
   208                           
   209                           ;main.c: 27:             LATEbits.LE1 = 1;
   210   000836  828D               	bsf	141,1,c	;volatile
   211                           
   212                           ;main.c: 28:         }
   213   000838  EF20  F004         	goto	l715
   214   00083C                     l21:
   215                           
   216                           ;main.c: 30:             LATEbits.LE0 = 1;
   217   00083C  808D               	bsf	141,0,c	;volatile
   218                           
   219                           ;main.c: 31:             LATEbits.LE1 = 0;
   220   00083E  928D               	bcf	141,1,c	;volatile
   221   000840                     l715:
   222                           
   223                           ;main.c: 33:         _delay((unsigned long)((1000)*(20000000/4000.0)));
   224   000840  0E1A               	movlw	26
   225   000842  6E22               	movwf	(??_main+1)^0,c
   226   000844  0E5E               	movlw	94
   227   000846  6E21               	movwf	??_main^0,c
   228   000848  0E6E               	movlw	110
   229   00084A                     u37:
   230   00084A  2EE8               	decfsz	wreg,f,c
   231   00084C  D7FE               	bra	u37
   232   00084E  2E21               	decfsz	??_main^0,f,c
   233   000850  D7FC               	bra	u37
   234   000852  2E22               	decfsz	(??_main+1)^0,f,c
   235   000854  D7FA               	bra	u37
   236   000856  D000               	nop2	
   237   000858                     
   238                           ;main.c: 34:     }
   239   000858  4A23               	infsnz	main@i^0,f,c
   240   00085A  2A24               	incf	(main@i+1)^0,f,c
   241   00085C  BE24               	btfsc	(main@i+1)^0,7,c
   242   00085E  EF3A  F004         	goto	u21
   243   000862  5024               	movf	(main@i+1)^0,w,c
   244   000864  E109               	bnz	u20
   245   000866  0E10               	movlw	16
   246   000868  5C23               	subwf	main@i^0,w,c
   247   00086A  A0D8               	btfss	status,0,c
   248   00086C  EF3A  F004         	goto	u21
   249   000870  EF3C  F004         	goto	u20
   250   000874                     u21:
   251   000874  EF0B  F004         	goto	l709
   252   000878                     u20:
   253   000878  EF00  F000         	goto	start
   254   00087C                     __end_of_main:
   255                           	callstack 0
   256                           
   257                           	psect	smallconst
   258   000800                     __psmallconst:
   259                           	callstack 0
   260   000800  00                 	db	0
   261   000801  00                 	db	0	; dummy byte at the end
   262   000000                     
   263                           	psect	rparam
   264   000000                     
   265                           	psect	config
   266                           
   267                           ;Config register CONFIG1L @ 0x300000
   268                           ;	PLL Prescaler Selection bits
   269                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   270                           ;	System Clock Postscaler Selection bits
   271                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   272                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   273                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   274   300000                     	org	3145728
   275   300000  00                 	db	0
   276                           
   277                           ;Config register CONFIG1H @ 0x300001
   278                           ;	Oscillator Selection bits
   279                           ;	FOSC = HS, HS oscillator (HS)
   280                           ;	Fail-Safe Clock Monitor Enable bit
   281                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   282                           ;	Internal/External Oscillator Switchover bit
   283                           ;	IESO = OFF, Oscillator Switchover mode disabled
   284   300001                     	org	3145729
   285   300001  0C                 	db	12
   286                           
   287                           ;Config register CONFIG2L @ 0x300002
   288                           ;	Power-up Timer Enable bit
   289                           ;	PWRT = OFF, PWRT disabled
   290                           ;	Brown-out Reset Enable bits
   291                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   292                           ;	Brown-out Reset Voltage bits
   293                           ;	BORV = 3, Minimum setting 2.05V
   294                           ;	USB Voltage Regulator Enable bit
   295                           ;	VREGEN = OFF, USB voltage regulator disabled
   296   300002                     	org	3145730
   297   300002  1F                 	db	31
   298                           
   299                           ;Config register CONFIG2H @ 0x300003
   300                           ;	Watchdog Timer Enable bit
   301                           ;	WDT = ON, WDT enabled
   302                           ;	Watchdog Timer Postscale Select bits
   303                           ;	WDTPS = 32768, 1:32768
   304   300003                     	org	3145731
   305   300003  1F                 	db	31
   306                           
   307                           ; Padding undefined space
   308   300004                     	org	3145732
   309   300004  FF                 	db	255
   310                           
   311                           ;Config register CONFIG3H @ 0x300005
   312                           ;	CCP2 MUX bit
   313                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   314                           ;	PORTB A/D Enable bit
   315                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   316                           ;	Low-Power Timer 1 Oscillator Enable bit
   317                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   318                           ;	MCLR Pin Enable bit
   319                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   320   300005                     	org	3145733
   321   300005  83                 	db	131
   322                           
   323                           ;Config register CONFIG4L @ 0x300006
   324                           ;	Stack Full/Underflow Reset Enable bit
   325                           ;	STVREN = ON, Stack full/underflow will cause Reset
   326                           ;	Single-Supply ICSP Enable bit
   327                           ;	LVP = ON, Single-Supply ICSP enabled
   328                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   329                           ;	ICPRT = OFF, ICPORT disabled
   330                           ;	Extended Instruction Set Enable bit
   331                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   332                           ;	Background Debugger Enable bit
   333                           ;	DEBUG = 0x1, unprogrammed default
   334   300006                     	org	3145734
   335   300006  85                 	db	133
   336                           
   337                           ; Padding undefined space
   338   300007                     	org	3145735
   339   300007  FF                 	db	255
   340                           
   341                           ;Config register CONFIG5L @ 0x300008
   342                           ;	Code Protection bit
   343                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   344                           ;	Code Protection bit
   345                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   346                           ;	Code Protection bit
   347                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   348                           ;	Code Protection bit
   349                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   350   300008                     	org	3145736
   351   300008  0F                 	db	15
   352                           
   353                           ;Config register CONFIG5H @ 0x300009
   354                           ;	Boot Block Code Protection bit
   355                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   356                           ;	Data EEPROM Code Protection bit
   357                           ;	CPD = OFF, Data EEPROM is not code-protected
   358   300009                     	org	3145737
   359   300009  C0                 	db	192
   360                           
   361                           ;Config register CONFIG6L @ 0x30000A
   362                           ;	Write Protection bit
   363                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   364                           ;	Write Protection bit
   365                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   366                           ;	Write Protection bit
   367                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   368                           ;	Write Protection bit
   369                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   370   30000A                     	org	3145738
   371   30000A  0F                 	db	15
   372                           
   373                           ;Config register CONFIG6H @ 0x30000B
   374                           ;	Configuration Register Write Protection bit
   375                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   376                           ;	Boot Block Write Protection bit
   377                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   378                           ;	Data EEPROM Write Protection bit
   379                           ;	WRTD = OFF, Data EEPROM is not write-protected
   380   30000B                     	org	3145739
   381   30000B  E0                 	db	224
   382                           
   383                           ;Config register CONFIG7L @ 0x30000C
   384                           ;	Table Read Protection bit
   385                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   386                           ;	Table Read Protection bit
   387                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   388                           ;	Table Read Protection bit
   389                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   390                           ;	Table Read Protection bit
   391                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   392   30000C                     	org	3145740
   393   30000C  0F                 	db	15
   394                           
   395                           ;Config register CONFIG7H @ 0x30000D
   396                           ;	Boot Block Table Read Protection bit
   397                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   398   30000D                     	org	3145741
   399   30000D  40                 	db	64
   400                           tosu	equ	0xFFF
   401                           tosh	equ	0xFFE
   402                           tosl	equ	0xFFD
   403                           stkptr	equ	0xFFC
   404                           pclatu	equ	0xFFB
   405                           pclath	equ	0xFFA
   406                           pcl	equ	0xFF9
   407                           tblptru	equ	0xFF8
   408                           tblptrh	equ	0xFF7
   409                           tblptrl	equ	0xFF6
   410                           tablat	equ	0xFF5
   411                           prodh	equ	0xFF4
   412                           prodl	equ	0xFF3
   413                           indf0	equ	0xFEF
   414                           postinc0	equ	0xFEE
   415                           postdec0	equ	0xFED
   416                           preinc0	equ	0xFEC
   417                           plusw0	equ	0xFEB
   418                           fsr0h	equ	0xFEA
   419                           fsr0l	equ	0xFE9
   420                           wreg	equ	0xFE8
   421                           indf1	equ	0xFE7
   422                           postinc1	equ	0xFE6
   423                           postdec1	equ	0xFE5
   424                           preinc1	equ	0xFE4
   425                           plusw1	equ	0xFE3
   426                           fsr1h	equ	0xFE2
   427                           fsr1l	equ	0xFE1
   428                           bsr	equ	0xFE0
   429                           indf2	equ	0xFDF
   430                           postinc2	equ	0xFDE
   431                           postdec2	equ	0xFDD
   432                           preinc2	equ	0xFDC
   433                           plusw2	equ	0xFDB
   434                           fsr2h	equ	0xFDA
   435                           fsr2l	equ	0xFD9
   436                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        32
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      4      36
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0      60
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      25        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      4      24       1       37.9%
BITBIGSFRh          3E      0       0      20        0.0%
BITBIGSFRlll        2C      0       0      23        0.0%
BITBIGSFRlh         2A      0       0      21        0.0%
BITBIGSFRllh         7      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      24      24        0.0%
DATA                 0      0      24       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Feb 01 08:33:22 2024

                     l21 083C                       l23 0878                       u10 0834  
                     u11 0830                       u20 0878                       u21 0874  
                     u37 084A                      l701 080A                      l711 0826  
                    l703 080C                      l713 0834                      l715 0840  
                    l717 0858                      l709 0816                      l699 0802  
                    wreg 0FE8                     _LATD 0F8C                     _main 0802  
                   fsr2h 0FDA                     indf2 0FDF                     fsr1l 0FE1  
                   fsr2l 0FD9                     prodl 0FF3                     start 0000  
           ___param_bank 0000                    ?_main 0021                    _TRISD 0F95  
                  main@i 0023                    tablat 0FF5                    status 0FD8  
        __initialization 087C             __end_of_main 087C                   ??_main 0021  
          __activetblptr 0000                   _ADCON1 0FC1                   isa$std 0001  
           __pdataCOMRAM 0001             __mediumconst 0000                   tblptrh 0FF7  
                 tblptrl 0FF6                   tblptru 0FF8               __accesstop 0060  
__end_of__initialization 089C            ___rparam_used 0001           __pcstackCOMRAM 0021  
                __Hparam 0000                  __Lparam 0000             __psmallconst 0800  
                __pcinit 087C                  __ramtop 0800                  __ptext0 0802  
   end_of_initialization 089C                  postdec1 0FE5                  postinc0 0FEE  
              _TRISEbits 0F96            __pidataCOMRAM 08A2      start_initialization 087C  
            __smallconst 0800                 _LATEbits 0F8D                copy_data0 0890  
               __Hrparam 0000                 __Lrparam 0000                 isa$xinst 0000  
          _display_array 0001  
