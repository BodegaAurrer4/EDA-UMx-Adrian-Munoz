

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Feb 15 14:39:29 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    14   000000                     
    15                           ; Generated 23/03/2023 GMT
    16                           ; 
    17                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F4550 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49   000000                     
    50                           	psect	idataCOMRAM
    51   0009F8                     __pidataCOMRAM:
    52                           	callstack 0
    53                           
    54                           ;initializer for _display_array
    55   0009F8  003F               	dw	63
    56   0009FA  0006               	dw	6
    57   0009FC  005B               	dw	91
    58   0009FE  004F               	dw	79
    59   000A00  0066               	dw	102
    60   000A02  006D               	dw	109
    61   000A04  007D               	dw	125
    62   000A06  0007               	dw	7
    63   000A08  007F               	dw	127
    64   000A0A  0067               	dw	103
    65   000A0C  0077               	dw	119
    66   000A0E  007C               	dw	124
    67   000A10  0039               	dw	57
    68   000A12  005E               	dw	94
    69   000A14  0079               	dw	121
    70   000A16  0071               	dw	113
    71   000000                     _PORTBbits	set	3969
    72   000000                     _LATAbits	set	3977
    73   000000                     _TRISAbits	set	3986
    74   000000                     _ADCON1	set	4033
    75   000000                     _TRISD	set	3989
    76   000000                     _TRISBbits	set	3987
    77   000000                     _LATD	set	3980
    78                           
    79                           ; #config settings
    80                           
    81                           	psect	cinit
    82   0009D2                     __pcinit:
    83                           	callstack 0
    84   0009D2                     start_initialization:
    85                           	callstack 0
    86   0009D2                     __initialization:
    87                           	callstack 0
    88                           
    89                           ; Initialize objects allocated to COMRAM (32 bytes)
    90                           ; load TBLPTR registers with __pidataCOMRAM
    91   0009D2  0EF8               	movlw	low __pidataCOMRAM
    92   0009D4  6EF6               	movwf	tblptrl,c
    93   0009D6  0E09               	movlw	high __pidataCOMRAM
    94   0009D8  6EF7               	movwf	tblptrh,c
    95   0009DA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    96   0009DC  6EF8               	movwf	tblptru,c
    97   0009DE  EE00  F001         	lfsr	0,__pdataCOMRAM
    98   0009E2  EE10 F020          	lfsr	1,32
    99   0009E6                     copy_data0:
   100   0009E6  0009               	tblrd		*+
   101   0009E8  CFF5 FFEE          	movff	tablat,postinc0
   102   0009EC  50E5               	movf	postdec1,w,c
   103   0009EE  50E1               	movf	fsr1l,w,c
   104   0009F0  E1FA               	bnz	copy_data0
   105   0009F2                     end_of_initialization:
   106                           	callstack 0
   107   0009F2                     __end_of__initialization:
   108                           	callstack 0
   109   0009F2  0100               	movlb	0
   110   0009F4  EF01  F004         	goto	_main	;jump to C main() function
   111                           
   112                           	psect	dataCOMRAM
   113   000001                     __pdataCOMRAM:
   114                           	callstack 0
   115   000001                     _display_array:
   116                           	callstack 0
   117   000001                     	ds	32
   118                           
   119                           	psect	cstackCOMRAM
   120   000021                     __pcstackCOMRAM:
   121                           	callstack 0
   122   000021                     ??_main:
   123                           
   124                           ; 1 bytes @ 0x0
   125   000021                     	ds	1
   126                           
   127 ;;
   128 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   129 ;;
   130 ;; *************** function _main *****************
   131 ;; Defined at:
   132 ;;		line 17 in file "main.c"
   133 ;; Parameters:    Size  Location     Type
   134 ;;		None
   135 ;; Auto vars:     Size  Location     Type
   136 ;;		None
   137 ;; Return value:  Size  Location     Type
   138 ;;                  1    wreg      void 
   139 ;; Registers used:
   140 ;;		wreg, status,2
   141 ;; Tracked objects:
   142 ;;		On entry : 0/0
   143 ;;		On exit  : 0/0
   144 ;;		Unchanged: 0/0
   145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   146 ;;      Params:         0       0       0       0       0       0       0       0       0
   147 ;;      Locals:         0       0       0       0       0       0       0       0       0
   148 ;;      Temps:          1       0       0       0       0       0       0       0       0
   149 ;;      Totals:         1       0       0       0       0       0       0       0       0
   150 ;;Total ram usage:        1 bytes
   151 ;; This function calls:
   152 ;;		Nothing
   153 ;; This function is called by:
   154 ;;		Startup code after reset
   155 ;; This function uses a non-reentrant model
   156 ;;
   157                           
   158                           	psect	text0
   159   000802                     __ptext0:
   160                           	callstack 0
   161   000802                     _main:
   162                           	callstack 31
   163   000802                     
   164                           ;main.c: 18:     ADCON1 = 0X0F;
   165   000802  0E0F               	movlw	15
   166   000804  6EC1               	movwf	193,c	;volatile
   167   000806                     
   168                           ;main.c: 19:     TRISAbits.RA0 = 0;
   169   000806  9092               	bcf	146,0,c	;volatile
   170   000808                     
   171                           ;main.c: 20:     TRISAbits.RA1 = 0;
   172   000808  9292               	bcf	146,1,c	;volatile
   173   00080A                     
   174                           ;main.c: 21:     TRISAbits.RA2 = 0;
   175   00080A  9492               	bcf	146,2,c	;volatile
   176   00080C                     
   177                           ;main.c: 22:     TRISAbits.RA3 = 0;
   178   00080C  9692               	bcf	146,3,c	;volatile
   179   00080E                     
   180                           ;main.c: 23:     TRISBbits.RB0 = 1;
   181   00080E  8093               	bsf	147,0,c	;volatile
   182   000810                     
   183                           ;main.c: 24:     TRISBbits.RB1 = 1;
   184   000810  8293               	bsf	147,1,c	;volatile
   185   000812                     
   186                           ;main.c: 25:     TRISBbits.RB2 = 1;
   187   000812  8493               	bsf	147,2,c	;volatile
   188   000814                     
   189                           ;main.c: 26:     TRISBbits.RB3 = 1;
   190   000814  8693               	bsf	147,3,c	;volatile
   191                           
   192                           ;main.c: 27:     TRISD = 0;
   193   000816  0E00               	movlw	0
   194   000818  6E95               	movwf	149,c	;volatile
   195   00081A                     l748:
   196                           
   197                           ;main.c: 30:         LATAbits.LA0 = 1;
   198   00081A  8089               	bsf	137,0,c	;volatile
   199   00081C                     
   200                           ;main.c: 31:         if(PORTBbits.RB0 == 1){
   201   00081C  A081               	btfss	129,0,c	;volatile
   202   00081E  EF13  F004         	goto	u11
   203   000822  EF15  F004         	goto	u10
   204   000826                     u11:
   205   000826  EF19  F004         	goto	l24
   206   00082A                     u10:
   207   00082A                     
   208                           ;main.c: 32:             LATD = display_array[1];
   209   00082A  C003  FF8C         	movff	_display_array+2,3980	;volatile
   210                           
   211                           ;main.c: 33:         }else if(PORTBbits.RB1 == 1){
   212   00082E  EF3A  F004         	goto	l760
   213   000832                     l24:
   214   000832  A281               	btfss	129,1,c	;volatile
   215   000834  EF1E  F004         	goto	u21
   216   000838  EF20  F004         	goto	u20
   217   00083C                     u21:
   218   00083C  EF24  F004         	goto	l26
   219   000840                     u20:
   220   000840                     
   221                           ;main.c: 34:             LATD = display_array[2];
   222   000840  C005  FF8C         	movff	_display_array+4,3980	;volatile
   223                           
   224                           ;main.c: 35:         }else if(PORTBbits.RB2 == 1){
   225   000844  EF3A  F004         	goto	l760
   226   000848                     l26:
   227   000848  A481               	btfss	129,2,c	;volatile
   228   00084A  EF29  F004         	goto	u31
   229   00084E  EF2B  F004         	goto	u30
   230   000852                     u31:
   231   000852  EF2F  F004         	goto	l28
   232   000856                     u30:
   233   000856                     
   234                           ;main.c: 36:             LATD = display_array[3];
   235   000856  C007  FF8C         	movff	_display_array+6,3980	;volatile
   236                           
   237                           ;main.c: 37:         }else if(PORTBbits.RB3 == 1){
   238   00085A  EF3A  F004         	goto	l760
   239   00085E                     l28:
   240   00085E  A681               	btfss	129,3,c	;volatile
   241   000860  EF34  F004         	goto	u41
   242   000864  EF36  F004         	goto	u40
   243   000868                     u41:
   244   000868  EF3A  F004         	goto	l27
   245   00086C                     u40:
   246   00086C                     
   247                           ;main.c: 38:             LATD = display_array[10];
   248   00086C  C015  FF8C         	movff	_display_array+20,3980	;volatile
   249   000870  EF3A  F004         	goto	l760
   250   000874                     l27:
   251   000874                     l760:
   252                           
   253                           ;main.c: 40:         _delay((unsigned long)((1)*(20000000/4000.0)));
   254   000874  0E07               	movlw	7
   255   000876  6E21               	movwf	??_main^0,c
   256   000878  0E7D               	movlw	125
   257   00087A                     u177:
   258   00087A  2EE8               	decfsz	wreg,f,c
   259   00087C  D7FE               	bra	u177
   260   00087E  2E21               	decfsz	??_main^0,f,c
   261   000880  D7FC               	bra	u177
   262   000882  0000               	nop	
   263   000884                     
   264                           ;main.c: 41:         LATAbits.LA0 = 0;
   265   000884  9089               	bcf	137,0,c	;volatile
   266   000886                     
   267                           ;main.c: 42:         LATAbits.LA1 = 1;
   268   000886  8289               	bsf	137,1,c	;volatile
   269   000888                     
   270                           ;main.c: 43:         if(PORTBbits.RB0 == 1){
   271   000888  A081               	btfss	129,0,c	;volatile
   272   00088A  EF49  F004         	goto	u51
   273   00088E  EF4B  F004         	goto	u50
   274   000892                     u51:
   275   000892  EF4F  F004         	goto	l31
   276   000896                     u50:
   277   000896                     
   278                           ;main.c: 44:             LATD = display_array[4];
   279   000896  C009  FF8C         	movff	_display_array+8,3980	;volatile
   280                           
   281                           ;main.c: 45:         }else if(PORTBbits.RB1 == 1){
   282   00089A  EF70  F004         	goto	l776
   283   00089E                     l31:
   284   00089E  A281               	btfss	129,1,c	;volatile
   285   0008A0  EF54  F004         	goto	u61
   286   0008A4  EF56  F004         	goto	u60
   287   0008A8                     u61:
   288   0008A8  EF5A  F004         	goto	l33
   289   0008AC                     u60:
   290   0008AC                     
   291                           ;main.c: 46:             LATD = display_array[5];
   292   0008AC  C00B  FF8C         	movff	_display_array+10,3980	;volatile
   293                           
   294                           ;main.c: 47:         }else if(PORTBbits.RB2 == 1){
   295   0008B0  EF70  F004         	goto	l776
   296   0008B4                     l33:
   297   0008B4  A481               	btfss	129,2,c	;volatile
   298   0008B6  EF5F  F004         	goto	u71
   299   0008BA  EF61  F004         	goto	u70
   300   0008BE                     u71:
   301   0008BE  EF65  F004         	goto	l35
   302   0008C2                     u70:
   303   0008C2                     
   304                           ;main.c: 48:             LATD = display_array[6];
   305   0008C2  C00D  FF8C         	movff	_display_array+12,3980	;volatile
   306                           
   307                           ;main.c: 49:         }else if(PORTBbits.RB3 == 1){
   308   0008C6  EF70  F004         	goto	l776
   309   0008CA                     l35:
   310   0008CA  A681               	btfss	129,3,c	;volatile
   311   0008CC  EF6A  F004         	goto	u81
   312   0008D0  EF6C  F004         	goto	u80
   313   0008D4                     u81:
   314   0008D4  EF70  F004         	goto	l34
   315   0008D8                     u80:
   316   0008D8                     
   317                           ;main.c: 50:             LATD = display_array[11];
   318   0008D8  C017  FF8C         	movff	_display_array+22,3980	;volatile
   319   0008DC  EF70  F004         	goto	l776
   320   0008E0                     l34:
   321   0008E0                     l776:
   322                           
   323                           ;main.c: 52:         _delay((unsigned long)((1)*(20000000/4000.0)));
   324   0008E0  0E07               	movlw	7
   325   0008E2  6E21               	movwf	??_main^0,c
   326   0008E4  0E7D               	movlw	125
   327   0008E6                     u187:
   328   0008E6  2EE8               	decfsz	wreg,f,c
   329   0008E8  D7FE               	bra	u187
   330   0008EA  2E21               	decfsz	??_main^0,f,c
   331   0008EC  D7FC               	bra	u187
   332   0008EE  0000               	nop	
   333   0008F0                     
   334                           ;main.c: 53:         LATAbits.LA1 = 0;
   335   0008F0  9289               	bcf	137,1,c	;volatile
   336   0008F2                     
   337                           ;main.c: 54:         LATAbits.LA2 = 1;
   338   0008F2  8489               	bsf	137,2,c	;volatile
   339   0008F4                     
   340                           ;main.c: 55:         if(PORTBbits.RB0 == 1){
   341   0008F4  A081               	btfss	129,0,c	;volatile
   342   0008F6  EF7F  F004         	goto	u91
   343   0008FA  EF81  F004         	goto	u90
   344   0008FE                     u91:
   345   0008FE  EF85  F004         	goto	l38
   346   000902                     u90:
   347   000902                     
   348                           ;main.c: 56:             LATD = display_array[7];
   349   000902  C00F  FF8C         	movff	_display_array+14,3980	;volatile
   350                           
   351                           ;main.c: 57:         }else if(PORTBbits.RB1 == 1){
   352   000906  EFA6  F004         	goto	l792
   353   00090A                     l38:
   354   00090A  A281               	btfss	129,1,c	;volatile
   355   00090C  EF8A  F004         	goto	u101
   356   000910  EF8C  F004         	goto	u100
   357   000914                     u101:
   358   000914  EF90  F004         	goto	l40
   359   000918                     u100:
   360   000918                     
   361                           ;main.c: 58:             LATD = display_array[8];
   362   000918  C011  FF8C         	movff	_display_array+16,3980	;volatile
   363                           
   364                           ;main.c: 59:         }else if(PORTBbits.RB2 == 1){
   365   00091C  EFA6  F004         	goto	l792
   366   000920                     l40:
   367   000920  A481               	btfss	129,2,c	;volatile
   368   000922  EF95  F004         	goto	u111
   369   000926  EF97  F004         	goto	u110
   370   00092A                     u111:
   371   00092A  EF9B  F004         	goto	l42
   372   00092E                     u110:
   373   00092E                     
   374                           ;main.c: 60:             LATD = display_array[9];
   375   00092E  C013  FF8C         	movff	_display_array+18,3980	;volatile
   376                           
   377                           ;main.c: 61:         }else if(PORTBbits.RB3 == 1){
   378   000932  EFA6  F004         	goto	l792
   379   000936                     l42:
   380   000936  A681               	btfss	129,3,c	;volatile
   381   000938  EFA0  F004         	goto	u121
   382   00093C  EFA2  F004         	goto	u120
   383   000940                     u121:
   384   000940  EFA6  F004         	goto	l41
   385   000944                     u120:
   386   000944                     
   387                           ;main.c: 62:             LATD = display_array[12];
   388   000944  C019  FF8C         	movff	_display_array+24,3980	;volatile
   389   000948  EFA6  F004         	goto	l792
   390   00094C                     l41:
   391   00094C                     l792:
   392                           
   393                           ;main.c: 64:         _delay((unsigned long)((1)*(20000000/4000.0)));
   394   00094C  0E07               	movlw	7
   395   00094E  6E21               	movwf	??_main^0,c
   396   000950  0E7D               	movlw	125
   397   000952                     u197:
   398   000952  2EE8               	decfsz	wreg,f,c
   399   000954  D7FE               	bra	u197
   400   000956  2E21               	decfsz	??_main^0,f,c
   401   000958  D7FC               	bra	u197
   402   00095A  0000               	nop	
   403   00095C                     
   404                           ;main.c: 65:         LATAbits.LA2 = 0;
   405   00095C  9489               	bcf	137,2,c	;volatile
   406   00095E                     
   407                           ;main.c: 66:         LATAbits.LA3 = 1;
   408   00095E  8689               	bsf	137,3,c	;volatile
   409   000960                     
   410                           ;main.c: 67:         if(PORTBbits.RB0 == 1){
   411   000960  A081               	btfss	129,0,c	;volatile
   412   000962  EFB5  F004         	goto	u131
   413   000966  EFB7  F004         	goto	u130
   414   00096A                     u131:
   415   00096A  EFBB  F004         	goto	l45
   416   00096E                     u130:
   417   00096E                     
   418                           ;main.c: 68:             LATD = display_array[14];
   419   00096E  C01D  FF8C         	movff	_display_array+28,3980	;volatile
   420                           
   421                           ;main.c: 69:         }else if(PORTBbits.RB1 == 1){
   422   000972  EFDC  F004         	goto	l808
   423   000976                     l45:
   424   000976  A281               	btfss	129,1,c	;volatile
   425   000978  EFC0  F004         	goto	u141
   426   00097C  EFC2  F004         	goto	u140
   427   000980                     u141:
   428   000980  EFC6  F004         	goto	l47
   429   000984                     u140:
   430   000984                     
   431                           ;main.c: 70:             LATD = display_array[0];
   432   000984  C001  FF8C         	movff	_display_array,3980	;volatile
   433                           
   434                           ;main.c: 71:         }else if(PORTBbits.RB2 == 1){
   435   000988  EFDC  F004         	goto	l808
   436   00098C                     l47:
   437   00098C  A481               	btfss	129,2,c	;volatile
   438   00098E  EFCB  F004         	goto	u151
   439   000992  EFCD  F004         	goto	u150
   440   000996                     u151:
   441   000996  EFD1  F004         	goto	l49
   442   00099A                     u150:
   443   00099A                     
   444                           ;main.c: 72:             LATD = display_array[15];
   445   00099A  C01F  FF8C         	movff	_display_array+30,3980	;volatile
   446                           
   447                           ;main.c: 73:         }else if(PORTBbits.RB3 == 1){
   448   00099E  EFDC  F004         	goto	l808
   449   0009A2                     l49:
   450   0009A2  A681               	btfss	129,3,c	;volatile
   451   0009A4  EFD6  F004         	goto	u161
   452   0009A8  EFD8  F004         	goto	u160
   453   0009AC                     u161:
   454   0009AC  EFDC  F004         	goto	l48
   455   0009B0                     u160:
   456   0009B0                     
   457                           ;main.c: 74:             LATD = display_array[13];
   458   0009B0  C01B  FF8C         	movff	_display_array+26,3980	;volatile
   459   0009B4  EFDC  F004         	goto	l808
   460   0009B8                     l48:
   461   0009B8                     l808:
   462                           
   463                           ;main.c: 76:         _delay((unsigned long)((1)*(20000000/4000.0)));
   464   0009B8  0E07               	movlw	7
   465   0009BA  6E21               	movwf	??_main^0,c
   466   0009BC  0E7D               	movlw	125
   467   0009BE                     u207:
   468   0009BE  2EE8               	decfsz	wreg,f,c
   469   0009C0  D7FE               	bra	u207
   470   0009C2  2E21               	decfsz	??_main^0,f,c
   471   0009C4  D7FC               	bra	u207
   472   0009C6  0000               	nop	
   473   0009C8                     
   474                           ;main.c: 77:         LATAbits.LA3 = 0;
   475   0009C8  9689               	bcf	137,3,c	;volatile
   476   0009CA  EF0D  F004         	goto	l748
   477   0009CE  EF00  F000         	goto	start
   478   0009D2                     __end_of_main:
   479                           	callstack 0
   480                           
   481                           	psect	smallconst
   482   000800                     __psmallconst:
   483                           	callstack 0
   484   000800  00                 	db	0
   485   000801  00                 	db	0	; dummy byte at the end
   486   000000                     
   487                           	psect	rparam
   488   000000                     
   489                           	psect	config
   490                           
   491                           ;Config register CONFIG1L @ 0x300000
   492                           ;	PLL Prescaler Selection bits
   493                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   494                           ;	System Clock Postscaler Selection bits
   495                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   496                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   497                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   498   300000                     	org	3145728
   499   300000  00                 	db	0
   500                           
   501                           ;Config register CONFIG1H @ 0x300001
   502                           ;	Oscillator Selection bits
   503                           ;	FOSC = HS, HS oscillator (HS)
   504                           ;	Fail-Safe Clock Monitor Enable bit
   505                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   506                           ;	Internal/External Oscillator Switchover bit
   507                           ;	IESO = OFF, Oscillator Switchover mode disabled
   508   300001                     	org	3145729
   509   300001  0C                 	db	12
   510                           
   511                           ;Config register CONFIG2L @ 0x300002
   512                           ;	Power-up Timer Enable bit
   513                           ;	PWRT = OFF, PWRT disabled
   514                           ;	Brown-out Reset Enable bits
   515                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   516                           ;	Brown-out Reset Voltage bits
   517                           ;	BORV = 3, Minimum setting 2.05V
   518                           ;	USB Voltage Regulator Enable bit
   519                           ;	VREGEN = OFF, USB voltage regulator disabled
   520   300002                     	org	3145730
   521   300002  1F                 	db	31
   522                           
   523                           ;Config register CONFIG2H @ 0x300003
   524                           ;	Watchdog Timer Enable bit
   525                           ;	WDT = ON, WDT enabled
   526                           ;	Watchdog Timer Postscale Select bits
   527                           ;	WDTPS = 32768, 1:32768
   528   300003                     	org	3145731
   529   300003  1F                 	db	31
   530                           
   531                           ; Padding undefined space
   532   300004                     	org	3145732
   533   300004  FF                 	db	255
   534                           
   535                           ;Config register CONFIG3H @ 0x300005
   536                           ;	CCP2 MUX bit
   537                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   538                           ;	PORTB A/D Enable bit
   539                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   540                           ;	Low-Power Timer 1 Oscillator Enable bit
   541                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   542                           ;	MCLR Pin Enable bit
   543                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   544   300005                     	org	3145733
   545   300005  83                 	db	131
   546                           
   547                           ;Config register CONFIG4L @ 0x300006
   548                           ;	Stack Full/Underflow Reset Enable bit
   549                           ;	STVREN = ON, Stack full/underflow will cause Reset
   550                           ;	Single-Supply ICSP Enable bit
   551                           ;	LVP = ON, Single-Supply ICSP enabled
   552                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   553                           ;	ICPRT = OFF, ICPORT disabled
   554                           ;	Extended Instruction Set Enable bit
   555                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   556                           ;	Background Debugger Enable bit
   557                           ;	DEBUG = 0x1, unprogrammed default
   558   300006                     	org	3145734
   559   300006  85                 	db	133
   560                           
   561                           ; Padding undefined space
   562   300007                     	org	3145735
   563   300007  FF                 	db	255
   564                           
   565                           ;Config register CONFIG5L @ 0x300008
   566                           ;	Code Protection bit
   567                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   568                           ;	Code Protection bit
   569                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   570                           ;	Code Protection bit
   571                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   572                           ;	Code Protection bit
   573                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   574   300008                     	org	3145736
   575   300008  0F                 	db	15
   576                           
   577                           ;Config register CONFIG5H @ 0x300009
   578                           ;	Boot Block Code Protection bit
   579                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   580                           ;	Data EEPROM Code Protection bit
   581                           ;	CPD = OFF, Data EEPROM is not code-protected
   582   300009                     	org	3145737
   583   300009  C0                 	db	192
   584                           
   585                           ;Config register CONFIG6L @ 0x30000A
   586                           ;	Write Protection bit
   587                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   588                           ;	Write Protection bit
   589                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   590                           ;	Write Protection bit
   591                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   592                           ;	Write Protection bit
   593                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   594   30000A                     	org	3145738
   595   30000A  0F                 	db	15
   596                           
   597                           ;Config register CONFIG6H @ 0x30000B
   598                           ;	Configuration Register Write Protection bit
   599                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   600                           ;	Boot Block Write Protection bit
   601                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   602                           ;	Data EEPROM Write Protection bit
   603                           ;	WRTD = OFF, Data EEPROM is not write-protected
   604   30000B                     	org	3145739
   605   30000B  E0                 	db	224
   606                           
   607                           ;Config register CONFIG7L @ 0x30000C
   608                           ;	Table Read Protection bit
   609                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   610                           ;	Table Read Protection bit
   611                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   612                           ;	Table Read Protection bit
   613                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   614                           ;	Table Read Protection bit
   615                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   616   30000C                     	org	3145740
   617   30000C  0F                 	db	15
   618                           
   619                           ;Config register CONFIG7H @ 0x30000D
   620                           ;	Boot Block Table Read Protection bit
   621                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   622   30000D                     	org	3145741
   623   30000D  40                 	db	64
   624                           tosu	equ	0xFFF
   625                           tosh	equ	0xFFE
   626                           tosl	equ	0xFFD
   627                           stkptr	equ	0xFFC
   628                           pclatu	equ	0xFFB
   629                           pclath	equ	0xFFA
   630                           pcl	equ	0xFF9
   631                           tblptru	equ	0xFF8
   632                           tblptrh	equ	0xFF7
   633                           tblptrl	equ	0xFF6
   634                           tablat	equ	0xFF5
   635                           prodh	equ	0xFF4
   636                           prodl	equ	0xFF3
   637                           indf0	equ	0xFEF
   638                           postinc0	equ	0xFEE
   639                           postdec0	equ	0xFED
   640                           preinc0	equ	0xFEC
   641                           plusw0	equ	0xFEB
   642                           fsr0h	equ	0xFEA
   643                           fsr0l	equ	0xFE9
   644                           wreg	equ	0xFE8
   645                           indf1	equ	0xFE7
   646                           postinc1	equ	0xFE6
   647                           postdec1	equ	0xFE5
   648                           preinc1	equ	0xFE4
   649                           plusw1	equ	0xFE3
   650                           fsr1h	equ	0xFE2
   651                           fsr1l	equ	0xFE1
   652                           bsr	equ	0xFE0
   653                           indf2	equ	0xFDF
   654                           postinc2	equ	0xFDE
   655                           postdec2	equ	0xFDD
   656                           preinc2	equ	0xFDC
   657                           plusw2	equ	0xFDB
   658                           fsr2h	equ	0xFDA
   659                           fsr2l	equ	0xFD9
   660                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        32
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      1      33
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      28        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      1      21       1       34.7%
BITBIGSFRh          3E      0       0      20        0.0%
BITBIGSFRlhh        2B      0       0      21        0.0%
BITBIGSFRllll       21      0       0      26        0.0%
BITBIGSFRlllh        7      0       0      25        0.0%
BITBIGSFRllhh        5      0       0      23        0.0%
BITBIGSFRllhl        2      0       0      24        0.0%
BITBIGSFRlhl         1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      21      27        0.0%
DATA                 0      0      21       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Feb 15 14:39:29 2024

                     l31 089E                       l40 0920                       l24 0832  
                     l41 094C                       l33 08B4                       l42 0936  
                     l34 08E0                       l26 0848                       l35 08CA  
                     l27 0874                       l28 085E                       l45 0976  
                     l38 090A                       l47 098C                       l48 09B8  
                     l49 09A2                       u10 082A                       u11 0826  
                     u20 0840                       u21 083C                       u30 0856  
                     u31 0852                       u40 086C                       u41 0868  
                     u50 0896                       u51 0892                       u60 08AC  
                     u61 08A8                       u70 08C2                       u71 08BE  
                     u80 08D8                       u81 08D4                       u90 0902  
                     u91 08FE                      l800 096E                      l810 09C8  
                    l802 0984                      l730 0802                      l804 099A  
                    l740 080E                      l732 0806                      l806 09B0  
                    l750 081C                      l742 0810                      l734 0808  
                    l808 09B8                      l760 0874                      l752 082A  
                    l744 0812                      l736 080A                      l770 08AC  
                    l762 0884                      l754 0840                      l746 0814  
                    l738 080C                      l780 08F2                      l772 08C2  
                    l764 0886                      l756 0856                      l748 081A  
                    l790 0944                      l782 08F4                      l774 08D8  
                    l766 0888                      l758 086C                      l792 094C  
                    l784 0902                      l776 08E0                      l768 0896  
                    l794 095C                      l786 0918                      l778 08F0  
                    l796 095E                      l788 092E                      l798 0960  
                    u100 0918                      u101 0914                      u110 092E  
                    u111 092A                      u120 0944                      u121 0940  
                    u130 096E                      u131 096A                      u140 0984  
                    u141 0980                      u150 099A                      u207 09BE  
                    u151 0996                      u160 09B0                      u161 09AC  
                    u177 087A                      u187 08E6                      u197 0952  
                    wreg 0FE8                     _LATD 0F8C                     _main 0802  
                   fsr1l 0FE1                     start 0000             ___param_bank 0000  
                  ?_main 0021                    _TRISD 0F95                    tablat 0FF5  
        __initialization 09D2             __end_of_main 09D2                   ??_main 0021  
          __activetblptr 0000                   _ADCON1 0FC1                   isa$std 0001  
           __pdataCOMRAM 0001             __mediumconst 0000                   tblptrh 0FF7  
                 tblptrl 0FF6                   tblptru 0FF8               __accesstop 0060  
__end_of__initialization 09F2            ___rparam_used 0001           __pcstackCOMRAM 0021  
                __Hparam 0000                  __Lparam 0000             __psmallconst 0800  
                __pcinit 09D2                  __ramtop 0800                  __ptext0 0802  
   end_of_initialization 09F2                  postdec1 0FE5                  postinc0 0FEE  
              _PORTBbits 0F81                _TRISAbits 0F92                _TRISBbits 0F93  
          __pidataCOMRAM 09F8      start_initialization 09D2              __smallconst 0800  
               _LATAbits 0F89                copy_data0 09E6                 __Hrparam 0000  
               __Lrparam 0000                 isa$xinst 0000            _display_array 0001  
